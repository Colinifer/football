{
    "data" : [
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 465 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/el-capitan/contrib/3.6/teamcolors_0.0.2.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 93354 bytes (91 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 91 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/el-capitan/contrib/3.6/glue_1.3.1.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 161354 bytes (157 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 157 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/macosx/el-capitan/contrib/3.6/dplyr_0.8.3.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 6850794 bytes (6.5 MB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 6.5 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/gn/jwq_xjps1hg6pyyhmmykhfvw0000gn/T//RtmpN3FXvt/downloaded_packages\n",
        "> ",
        "##install.packages(c(\"devtools\", \"tidyverse\", \"readr\", \"pander\", \"na.tools\", \"ggimage\", \"devtools\", \"teamcolors\", \"glue\", \"animate\", \"dplyr\"))",
        "> ",
        "##devtools::install_github(repo = \"maksimhorowitz/nflscrapR\")",
        "> ",
        "",
        "> ",
        "library(nflscrapR)",
        "Loading required package: nnet\n",
        "Loading required package: magrittr\n",
        "\nAttaching package: â€˜nflscrapRâ€™\n\n",
        "The following objects are masked _by_ â€˜.GlobalEnvâ€™:\n\n    agg_player_season, player_game, season_player_game, season_rosters\n\n",
        "> ",
        "library(tidyverse)",
        "[37mâ”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.2.1 â”€â”€[39m\n",
        "[37m[32mâœ”[37m [34mggplot2[37m 3.2.1     [32mâœ”[37m [34mpurrr  [37m 0.3.3\n[32mâœ”[37m [34mtibble [37m 2.1.3     [32mâœ”[37m [34mdplyr  [37m 0.8.3\n[32mâœ”[37m [34mtidyr  [37m 1.0.0     [32mâœ”[37m [34mstringr[37m 1.4.0\n[32mâœ”[37m [34mreadr  [37m 1.3.1     [32mâœ”[37m [34mforcats[37m 0.4.0[39m\n",
        "[37mâ”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€\n[31mâœ–[37m [34mtidyr[37m::[32mextract()[37m   masks [34mmagrittr[37m::extract()\n[31mâœ–[37m [34mdplyr[37m::[32mfilter()[37m    masks [34mstats[37m::filter()\n[31mâœ–[37m [34mdplyr[37m::[32mlag()[37m       masks [34mstats[37m::lag()\n[31mâœ–[37m [34mpurrr[37m::[32mset_names()[37m masks [34mmagrittr[37m::set_names()[39m\n",
        "> ",
        "library(readr)",
        "> ",
        "library(pander)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(na.tools)",
        "na.tools-0.3.1 (2018-06-25) - Copyright Â© 2018 Decision Patterns\n",
        "> ",
        "library(ggimage)",
        "> ",
        "library(teamcolors)",
        "> ",
        "library(plyr)",
        "--------------------------------------------------------------------------------------------------------------------\n",
        "You have loaded plyr after dplyr - this is likely to cause problems.\nIf you need functions from both plyr and dplyr, please load plyr first, then dplyr:\nlibrary(plyr); library(dplyr)\n",
        "--------------------------------------------------------------------------------------------------------------------\n",
        "\nAttaching package: â€˜plyrâ€™\n\n",
        "The following objects are masked from â€˜package:dplyrâ€™:\n\n    arrange, count, desc, failwith, id, mutate, rename, summarise, summarize\n\n",
        "The following object is masked from â€˜package:purrrâ€™:\n\n    compact\n\n",
        "> ",
        "library(readr)",
        "> ",
        "library(glue)",
        "\nAttaching package: â€˜glueâ€™\n\n",
        "The following object is masked from â€˜package:dplyrâ€™:\n\n    collapse\n\n",
        "> ",
        "library(animate)",
        "Error in library(animate) : there is no package called â€˜animateâ€™\n",
        "> ",
        "",
        "> ",
        "##reset",
        "> ",
        "setwd(\"~/\")",
        "> ",
        "gid <- paste(getwd())",
        "> ",
        "gid",
        "[1] \"/Users/ColinWelsh\"\n",
        "> ",
        "device <- \"\"",
        "> ",
        "",
        "> ",
        "if (gid == \"/Volumes/HDD/Users/colinwelsh\") {",
        "+ ",
        "  ##Maverick - MBP",
        "+ ",
        "  setwd(\"~/Documents/dev/football\")",
        "+ ",
        "  device <- \"Maverick (MBP)\"",
        "+ ",
        "} else if (gid == \"/Users/ColinWelsh\") {",
        "+ ",
        "  ##Goose - iMac",
        "+ ",
        "  setwd(\"~/Documents/dev/football\")",
        "+ ",
        "  device <- \"Goose (iMac)\"",
        "+ ",
        "  ##add Goose",
        "+ ",
        "} ",
        "> ",
        "print(paste(device, \"is ready for some football\", sep = \" \"))",
        "[1] \"Goose (iMac) is ready for some football\"\n",
        "> ",
        "rm(gid, device)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# other dependent variables",
        "> ",
        "",
        "> ",
        "userYear <- 2019 ##necessary for saved ",
        "> ",
        "userWeek <- 10 ##not necessary at the moment",
        "> ",
        "fgame_ids <- paste(\"data/games/reg_season/reg_games_\", userYear, \".csv\", sep =\"\")",
        "> ",
        "season2019 <- season_player_game(2019)",
        "Loading required package: XML\n",
        "Loading required package: RCurl\n",
        "Loading required package: bitops\n",
        "\nAttaching package: â€˜RCurlâ€™\n\n",
        "The following object is masked from â€˜package:tidyrâ€™:\n\n    complete\n\n",
        "> ",
        "View(season2019)",
        "> ",
        "View(players2019)",
        "> ",
        "View(season2019)",
        "> ",
        "tail(pbp2019)",
        "[38;5;246m# A tibble: 6 x 260[39m\n  game_id home_team away_team posteam posteam_type defteam side_of_field yardline_100 game_date  quarter_secondsâ€¦\n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<chr>[39m[23m     [3m[38;5;246m<chr>[39m[23m     [3m[38;5;246m<chr>[39m[23m   [3m[38;5;246m<chr>[39m[23m        [3m[38;5;246m<chr>[39m[23m   [3m[38;5;246m<chr>[39m[23m                [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<date>[39m[23m                [3m[38;5;246m<dbl>[39m[23m\n",
        "[38;5;250m1[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     ARI                     49 2019-10-31              137\n[38;5;250m2[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     SF                      51 2019-10-31              137\n[38;5;250m3[39m  2.02[38;5;246me[39m9 ARI       SF        [31mNA[39m      [31mNA[39m           [31mNA[39m      SF                      [31mNA[39m 2019-10-31              120\n[38;5;250m4[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     ARI                     43 2019-10-31              120\n",
        "[38;5;250m5[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     ARI                     48 2019-10-31              120\n[38;5;250m6[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     ARI                     37 2019-10-31               76\n[38;5;246m# â€¦ with 250 more variables: half_seconds_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, game_seconds_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, game_half [3m[38;5;246m<chr>[38;5;246m[23m,\n#   quarter_end [3m[38;5;246m<dbl>[38;5;246m[23m, drive [3m[38;5;246m<dbl>[38;5;246m[23m, sp [3m[38;5;246m<dbl>[38;5;246m[23m, qtr [3m[38;5;246m<dbl>[38;5;246m[23m, down [3m[38;5;246m<dbl>[38;5;246m[23m, goal_to_go [3m[38;5;246m<dbl>[38;5;246m[23m, time [3m[38;5;246m<time>[38;5;246m[23m, yrdln [3m[38;5;246m<chr>[38;5;246m[23m,\n#   ydstogo [3m[38;5;246m<dbl>[38;5;246m[23m, ydsnet [3m[38;5;246m<dbl>[38;5;246m[23m, desc [3m[38;5;246m<chr>[38;5;246m[23m, play_type [3m[38;5;246m<chr>[38;5;246m[23m, yards_gained [3m[38;5;246m<dbl>[38;5;246m[23m, shotgun [3m[38;5;246m<dbl>[38;5;246m[23m, no_huddle [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   qb_dropback [3m[38;5;246m<dbl>[38;5;246m[23m, qb_kneel [3m[38;5;246m<dbl>[38;5;246m[23m, qb_spike [3m[38;5;246m<dbl>[38;5;246m[23m, qb_scramble [3m[38;5;246m<dbl>[38;5;246m[23m, pass_length [3m[38;5;246m<chr>[38;5;246m[23m, pass_location [3m[38;5;246m<chr>[38;5;246m[23m,\n#   air_yards [3m[38;5;246m<dbl>[38;5;246m[23m, yards_after_catch [3m[38;5;246m<dbl>[38;5;246m[23m, run_location [3m[38;5;246m<chr>[38;5;246m[23m, run_gap [3m[38;5;246m<chr>[38;5;246m[23m, field_goal_result [3m[38;5;246m<chr>[38;5;246m[23m,\n#   kick_distance [3m[38;5;246m<dbl>[38;5;246m[23m, extra_point_result [3m[38;5;246m<chr>[38;5;246m[23m, two_point_conv_result [3m[38;5;246m<chr>[38;5;246m[23m, home_timeouts_remaining [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   away_timeouts_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, timeout [3m[38;5;246m<dbl>[38;5;246m[23m, timeout_team [3m[38;5;246m<chr>[38;5;246m[23m, td_team [3m[38;5;246m<chr>[38;5;246m[23m,\n#   posteam_timeouts_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, defteam_timeouts_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_score [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_score [3m[38;5;246m<dbl>[38;5;246m[23m, posteam_score [3m[38;5;246m<dbl>[38;5;246m[23m, defteam_score [3m[38;5;246m<dbl>[38;5;246m[23m, score_differential [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   posteam_score_post [3m[38;5;246m<dbl>[38;5;246m[23m, defteam_score_post [3m[38;5;246m<dbl>[38;5;246m[23m, score_differential_post [3m[38;5;246m<dbl>[38;5;246m[23m, no_score_prob [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   opp_fg_prob [3m[38;5;246m<dbl>[38;5;246m[23m, opp_safety_prob [3m[38;5;246m<dbl>[38;5;246m[23m, opp_td_prob [3m[38;5;246m<dbl>[38;5;246m[23m, fg_prob [3m[38;5;246m<dbl>[38;5;246m[23m, safety_prob [3m[38;5;246m<dbl>[38;5;246m[23m, td_prob [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   extra_point_prob [3m[38;5;246m<dbl>[38;5;246m[23m, two_point_conversion_prob [3m[38;5;246m<dbl>[38;5;246m[23m, ep [3m[38;5;246m<dbl>[38;5;246m[23m, epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_rush_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_rush_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_pass_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_pass_epa [3m[38;5;246m<dbl>[38;5;246m[23m, air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m, comp_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, comp_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_home_comp_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_comp_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_comp_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_comp_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_raw_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_raw_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_home_raw_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_raw_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m, wp [3m[38;5;246m<dbl>[38;5;246m[23m, def_wp [3m[38;5;246m<dbl>[38;5;246m[23m, home_wp [3m[38;5;246m<dbl>[38;5;246m[23m, away_wp [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   wpa [3m[38;5;246m<dbl>[38;5;246m[23m, home_wp_post [3m[38;5;246m<dbl>[38;5;246m[23m, away_wp_post [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_rush_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_rush_wpa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_home_pass_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_pass_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, comp_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   comp_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_comp_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_comp_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_comp_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_comp_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_raw_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_raw_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_home_raw_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_raw_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, punt_blocked [3m[38;5;246m<dbl>[38;5;246m[23m, â€¦[39m\n",
        "> ",
        "# set custom variables",
        "> ",
        "  userYear <- 2019 ##necessary for saved ",
        "> ",
        "  userWeek <- 10 ##not necessary at the moment",
        "> ",
        "  today <- Sys.Date()",
        "> ",
        "  ",
        "> ",
        "    # test date",
        "> ",
        "  date <- 2019",
        "> ",
        "##  date <- format(today, format=\"%Y%m%d\")",
        "> ",
        "  ",
        "> ",
        "  fgame_ids <- paste(\"data/games/reg_season/reg_games_\", userYear, \".csv\", sep =\"\")",
        "> ",
        "  ",
        "> ",
        "  ",
        "> ",
        "game_ids <- read.csv(fgame_ids, check.names = FALSE)",
        "> ",
        "",
        "> ",
        "currentGameIDs <- game_ids$game_id",
        "> ",
        "#pull games in 2019 season that match today's date",
        "> ",
        "currentGames <- grep(date, currentGameIDs)",
        "> ",
        "games_in_play <- currentGameIDs[currentGames]",
        "> ",
        "",
        "> ",
        "##can't figure this out yet",
        "> ",
        "#  ",
        "> ",
        "#  games_in_play <- game_ids$state_of_game[currentGames] != \"POST\"",
        "> ",
        "#",
        "> ",
        "#  nplay <- length(games_in_play)",
        "> ",
        "#  nplayLoop <- 1",
        "> ",
        "#",
        "> ",
        "",
        "> ",
        "# scrape pbp of active games",
        "> ",
        "",
        "> ",
        "# if 0 games, scrape scores",
        "> ",
        "for (x in games_in_play)",
        "+ ",
        "  {",
        "+ ",
        "  f <- paste(\"data/games/\", userYear, \"/\", x, \".csv\", sep = \"\")",
        "+ ",
        "  fplayers <-  paste(\"data/players/\", userYear, \"/\", x, \"players\", \".csv\", sep = \"\")",
        "+ ",
        "  ",
        "+ ",
        "  if (file.exists(fplayers)==TRUE & grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE)",
        "+ ",
        "  {",
        "+ ",
        "    xplayers <- player_game(x)",
        "+ ",
        "    write.csv(xplayers, fplayers, row.names = FALSE)",
        "+ ",
        "  } else {",
        "+ ",
        "    xplayers <- player_game(x)",
        "+ ",
        "    write.csv(xplayers, fplayers, row.names = FALSE)",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  if (file.exists(f)==TRUE)",
        "+ ",
        "    {",
        "+ ",
        "    ",
        "+ ",
        "    #read game csv",
        "+ ",
        "    y <- read.csv(f, check.names=FALSE)",
        "+ ",
        "    tail(y)",
        "+ ",
        "    ",
        "+ ",
        "    #check if y$desc contains \"END GAME\"",
        "+ ",
        "    #if x has END GAME change state_of_game to POST",
        "+ ",
        "    if (grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE)",
        "+ ",
        "      {",
        "+ ",
        "      print(paste(\"Game\", x, \"is over.\", sep = \" \"))",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"state_of_game\"] <- \"POST\"",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"away_score\"] <- y$total_away_score[nrow(y)]",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"home_score\"] <- y$total_home_score[nrow(y)]",
        "+ ",
        "      print(paste(\"Changing the state of game for\", x, \"to POST\", sep = \" \"))",
        "+ ",
        "      write.csv(game_ids, fgame_ids, row.names = FALSE)",
        "+ ",
        "    }",
        "+ ",
        "    else",
        "+ ",
        "      {",
        "+ ",
        "      #scrape",
        "+ ",
        "      print(paste(\"Scraping game \", x, sep = \"\"))",
        "+ ",
        "      print(paste(game_ids[game_ids$game_id == x, \"away_team\"], \"vs\", game_ids[game_ids$game_id == x, \"home_team\"], sep = \" \"))",
        "+ ",
        "      y <- scrape_json_play_by_play(x)",
        "+ ",
        "      tail(y)",
        "+ ",
        "      game_ids$X <- NULL ## annoying glitch",
        "+ ",
        "      if (grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE) {",
        "+ ",
        "        print(paste(\"Game\", x, \"is over.\", sep = \" \"))",
        "+ ",
        "          print(paste(game_ids[game_ids$game_id == x, \"away_team\"], \"vs\", game_ids[game_ids$game_id == x, \"home_team\"], sep = \" \"))",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"state_of_game\"] <- \"POST\"",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"away_score\"] <- y$total_away_score[nrow(y)]",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"home_score\"] <- y$total_home_score[nrow(y)]",
        "+ ",
        "        print(paste(\"Changing the state of game for \", x, \" to POST\", sep = \"\"))",
        "+ ",
        "        write.csv(game_ids, fgame_ids, row.names=FALSE)",
        "+ ",
        "        }",
        "+ ",
        "      write.csv(y, file = paste(\"data/games/\", userYear,\"/\", x, \".csv\", sep = \"\"), row.names=FALSE)",
        "+ ",
        "      }",
        "+ ",
        "  }",
        "+ ",
        "  else",
        "+ ",
        "    {",
        "+ ",
        "    print(paste(\"Scraping game\", x, sep = \" \"))",
        "+ ",
        "    print(",
        "+ ",
        "      paste(",
        "+ ",
        "        game_ids[",
        "+ ",
        "        game_ids$game_id == x, \"away_team\"], ",
        "+ ",
        "        \"vs\", ",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"home_team\"], ",
        "+ ",
        "        sep = \" \"",
        "+ ",
        "        )",
        "+ ",
        "      )",
        "+ ",
        "    y <- scrape_json_play_by_play(x)",
        "+ ",
        "    tail(y)",
        "+ ",
        "    write.csv(y, file = paste(\"data/games/\", userYear,\"/\", x, \".csv\", sep = \"\"), row.names=FALSE)",
        "+ ",
        "    }",
        "+ ",
        "  xawayscore <- y$total_away_score[nrow(y)]",
        "+ ",
        "  xawayteam <- y$away_team[1]",
        "+ ",
        "  xhomescore <- y$total_home_score[nrow(y)]",
        "+ ",
        "  xhometeam <- y$home_team[1]",
        "+ ",
        "  print(paste(xawayteam, \": \", xawayscore, \" @ \", xhometeam, \": \", xhomescore, sep = \"\"))",
        "+ ",
        "  ",
        "+ ",
        "  print(paste(\"Last play:\", y$desc[nrow(y)], sep=\"\"))",
        "+ ",
        "  }",
        "[1] \"Game 2019090500 is over.\"\n[1] \"Changing the state of game for 2019090500 to POST\"\n[1] \"GB: 10 @ CHI: 3\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090800 is over.\"\n[1] \"Changing the state of game for 2019090800 to POST\"\n[1] \"LA: 30 @ CAR: 27\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090806 is over.\"\n[1] \"Changing the state of game for 2019090806 to POST\"\n[1] \"WAS: 27 @ PHI: 32\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090805 is over.\"\n[1] \"Changing the state of game for 2019090805 to POST\"\n[1] \"BUF: 17 @ NYJ: 16\"",
        "\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090804 is over.\"\n[1] \"Changing the state of game for 2019090804 to POST\"\n[1] \"ATL: 12 @ MIN: 28\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090803 is over.\"\n[1] \"Changing the state of game for 2019090803 to POST\"\n[1] \"BAL: 59 @ MIA: 10\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090802 is over.\"\n[1] \"Changing the state of game for 2019090802 to POST\"\n[1] \"KC: 40 @ JAX: 26\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090801 is over.\"\n[1] \"Changing the state of game for 2019090801 to POST\"",
        "\n[1] \"TEN: 43 @ CLE: 13\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090807 is over.\"\n[1] \"Changing the state of game for 2019090807 to POST\"\n[1] \"IND: 24 @ LAC: 30\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090808 is over.\"\n[1] \"Changing the state of game for 2019090808 to POST\"\n[1] \"CIN: 20 @ SEA: 21\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090811 is over.\"\n[1] \"Changing the state of game for 2019090811 to POST\"\n[1] \"SF: 31 @ TB: 17\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090810 is over.\"\n[1] \"Changing the state of game for 2019090810 to POST\"",
        "\n[1] \"NYG: 17 @ DAL: 35\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090809 is over.\"\n[1] \"Changing the state of game for 2019090809 to POST\"\n[1] \"DET: 27 @ ARI: 27\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090812 is over.\"\n[1] \"Changing the state of game for 2019090812 to POST\"\n[1] \"PIT: 3 @ NE: 33\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090900 is over.\"\n[1] \"Changing the state of game for 2019090900 to POST\"\n[1] \"HOU: 28 @ NO: 30\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019090901 is over.\"\n[1] \"Changing the state of game for 2019090901 to POST\"",
        "\n[1] \"DEN: 16 @ OAK: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091200 is over.\"\n[1] \"Changing the state of game for 2019091200 to POST\"\n[1] \"TB: 20 @ CAR: 14\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091500 is over.\"\n[1] \"Changing the state of game for 2019091500 to POST\"\n[1] \"ARI: 17 @ BAL: 23\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091509 is over.\"\n[1] \"Changing the state of game for 2019091509 to POST\"\n[1] \"DAL: 31 @ WAS: 21\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091508 is over.\"\n[1] \"Changing the state of game for 2019091508 to POST\"",
        "\n[1] \"IND: 19 @ TEN: 17\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091507 is over.\"\n[1] \"Changing the state of game for 2019091507 to POST\"\n[1] \"SEA: 28 @ PIT: 26\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091506 is over.\"\n[1] \"Changing the state of game for 2019091506 to POST\"\n[1] \"BUF: 28 @ NYG: 14\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091501 is over.\"\n[1] \"Changing the state of game for 2019091501 to POST\"\n[1] \"SF: 41 @ CIN: 17\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091502 is over.\"\n[1] \"Changing the state of game for 2019091502 to POST\"",
        "\n[1] \"LAC: 10 @ DET: 13\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091503 is over.\"\n[1] \"Changing the state of game for 2019091503 to POST\"\n[1] \"MIN: 16 @ GB: 21\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091504 is over.\"\n[1] \"Changing the state of game for 2019091504 to POST\"\n[1] \"JAX: 12 @ HOU: 13\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091505 is over.\"\n[1] \"Changing the state of game for 2019091505 to POST\"\n[1] \"NE: 43 @ MIA: 0\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091510 is over.\"\n[1] \"Changing the state of game for 2019091510 to POST\"",
        "\n[1] \"KC: 28 @ OAK: 10\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091512 is over.\"\n[1] \"Changing the state of game for 2019091512 to POST\"\n[1] \"NO: 9 @ LA: 27\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091511 is over.\"\n[1] \"Changing the state of game for 2019091511 to POST\"\n[1] \"CHI: 16 @ DEN: 14\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091513 is over.\"\n[1] \"Changing the state of game for 2019091513 to POST\"\n[1] \"PHI: 20 @ ATL: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091600 is over.\"\n[1] \"Changing the state of game for 2019091600 to POST\"",
        "\n[1] \"CLE: 23 @ NYJ: 3\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019091900 is over.\"\n[1] \"Changing the state of game for 2019091900 to POST\"\n[1] \"TEN: 7 @ JAX: 20\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019092200 is over.\"\n[1] \"Changing the state of game for 2019092200 to POST\"\n[1] \"CIN: 17 @ BUF: 21\"\n[1] \"Last play:END GAME\"\n",
        "\n",
        "> ",
        "# set custom variables",
        "> ",
        "  userYear <- 2019 ##necessary for saved ",
        "> ",
        "  userWeek <- 10 ##not necessary at the moment",
        "> ",
        "  today <- Sys.Date()",
        "> ",
        "  ",
        "> ",
        "    # test date",
        "> ",
        "  date <- 20191",
        "> ",
        "##  date <- format(today, format=\"%Y%m%d\")",
        "> ",
        "  ",
        "> ",
        "  fgame_ids <- paste(\"data/games/reg_season/reg_games_\", userYear, \".csv\", sep =\"\")",
        "> ",
        "  ",
        "> ",
        "  ",
        "> ",
        "game_ids <- read.csv(fgame_ids, check.names = FALSE)",
        "> ",
        "",
        "> ",
        "currentGameIDs <- game_ids$game_id",
        "> ",
        "#pull games in 2019 season that match today's date",
        "> ",
        "currentGames <- grep(date, currentGameIDs)",
        "> ",
        "games_in_play <- currentGameIDs[currentGames]",
        "> ",
        "",
        "> ",
        "##can't figure this out yet",
        "> ",
        "#  ",
        "> ",
        "#  games_in_play <- game_ids$state_of_game[currentGames] != \"POST\"",
        "> ",
        "#",
        "> ",
        "#  nplay <- length(games_in_play)",
        "> ",
        "#  nplayLoop <- 1",
        "> ",
        "#",
        "> ",
        "",
        "> ",
        "# scrape pbp of active games",
        "> ",
        "",
        "> ",
        "# if 0 games, scrape scores",
        "> ",
        "for (x in games_in_play)",
        "+ ",
        "  {",
        "+ ",
        "  f <- paste(\"data/games/\", userYear, \"/\", x, \".csv\", sep = \"\")",
        "+ ",
        "  fplayers <-  paste(\"data/players/\", userYear, \"/\", x, \"players\", \".csv\", sep = \"\")",
        "+ ",
        "  ",
        "+ ",
        "  if (file.exists(fplayers)==TRUE & grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE)",
        "+ ",
        "  {",
        "+ ",
        "    xplayers <- player_game(x)",
        "+ ",
        "    write.csv(xplayers, fplayers, row.names = FALSE)",
        "+ ",
        "  } else {",
        "+ ",
        "    xplayers <- player_game(x)",
        "+ ",
        "    write.csv(xplayers, fplayers, row.names = FALSE)",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  if (file.exists(f)==TRUE)",
        "+ ",
        "    {",
        "+ ",
        "    ",
        "+ ",
        "    #read game csv",
        "+ ",
        "    y <- read.csv(f, check.names=FALSE)",
        "+ ",
        "    tail(y)",
        "+ ",
        "    ",
        "+ ",
        "    #check if y$desc contains \"END GAME\"",
        "+ ",
        "    #if x has END GAME change state_of_game to POST",
        "+ ",
        "    if (grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE)",
        "+ ",
        "      {",
        "+ ",
        "      print(paste(\"Game\", x, \"is over.\", sep = \" \"))",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"state_of_game\"] <- \"POST\"",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"away_score\"] <- y$total_away_score[nrow(y)]",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"home_score\"] <- y$total_home_score[nrow(y)]",
        "+ ",
        "      print(paste(\"Changing the state of game for\", x, \"to POST\", sep = \" \"))",
        "+ ",
        "      write.csv(game_ids, fgame_ids, row.names = FALSE)",
        "+ ",
        "    }",
        "+ ",
        "    else",
        "+ ",
        "      {",
        "+ ",
        "      #scrape",
        "+ ",
        "      print(paste(\"Scraping game \", x, sep = \"\"))",
        "+ ",
        "      print(paste(game_ids[game_ids$game_id == x, \"away_team\"], \"vs\", game_ids[game_ids$game_id == x, \"home_team\"], sep = \" \"))",
        "+ ",
        "      y <- scrape_json_play_by_play(x)",
        "+ ",
        "      tail(y)",
        "+ ",
        "      game_ids$X <- NULL ## annoying glitch",
        "+ ",
        "      if (grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE) {",
        "+ ",
        "        print(paste(\"Game\", x, \"is over.\", sep = \" \"))",
        "+ ",
        "          print(paste(game_ids[game_ids$game_id == x, \"away_team\"], \"vs\", game_ids[game_ids$game_id == x, \"home_team\"], sep = \" \"))",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"state_of_game\"] <- \"POST\"",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"away_score\"] <- y$total_away_score[nrow(y)]",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"home_score\"] <- y$total_home_score[nrow(y)]",
        "+ ",
        "        print(paste(\"Changing the state of game for \", x, \" to POST\", sep = \"\"))",
        "+ ",
        "        write.csv(game_ids, fgame_ids, row.names=FALSE)",
        "+ ",
        "        }",
        "+ ",
        "      write.csv(y, file = paste(\"data/games/\", userYear,\"/\", x, \".csv\", sep = \"\"), row.names=FALSE)",
        "+ ",
        "      }",
        "+ ",
        "  }",
        "+ ",
        "  else",
        "+ ",
        "    {",
        "+ ",
        "    print(paste(\"Scraping game\", x, sep = \" \"))",
        "+ ",
        "    print(",
        "+ ",
        "      paste(",
        "+ ",
        "        game_ids[",
        "+ ",
        "        game_ids$game_id == x, \"away_team\"], ",
        "+ ",
        "        \"vs\", ",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"home_team\"], ",
        "+ ",
        "        sep = \" \"",
        "+ ",
        "        )",
        "+ ",
        "      )",
        "+ ",
        "    y <- scrape_json_play_by_play(x)",
        "+ ",
        "    tail(y)",
        "+ ",
        "    write.csv(y, file = paste(\"data/games/\", userYear,\"/\", x, \".csv\", sep = \"\"), row.names=FALSE)",
        "+ ",
        "    }",
        "+ ",
        "  xawayscore <- y$total_away_score[nrow(y)]",
        "+ ",
        "  xawayteam <- y$away_team[1]",
        "+ ",
        "  xhomescore <- y$total_home_score[nrow(y)]",
        "+ ",
        "  xhometeam <- y$home_team[1]",
        "+ ",
        "  print(paste(xawayteam, \": \", xawayscore, \" @ \", xhometeam, \": \", xhomescore, sep = \"\"))",
        "+ ",
        "  ",
        "+ ",
        "  print(paste(\"Last play:\", y$desc[nrow(y)], sep=\"\"))",
        "+ ",
        "  }",
        "[1] \"Game 2019100300 is over.\"\n[1] \"Changing the state of game for 2019100300 to POST\"\n[1] \"LA: 29 @ SEA: 30\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100600 is over.\"\n[1] \"Changing the state of game for 2019100600 to POST\"\n[1] \"JAX: 27 @ CAR: 34\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100609 is over.\"\n[1] \"Changing the state of game for 2019100609 to POST\"\n[1] \"NE: 33 @ WAS: 7\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100608 is over.\"\n[1] \"Changing the state of game for 2019100608 to POST\"\n[1] \"BUF: 14 @ TEN: 7\"",
        "\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100607 is over.\"\n[1] \"Changing the state of game for 2019100607 to POST\"\n[1] \"BAL: 26 @ PIT: 23\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100601 is over.\"\n[1] \"Changing the state of game for 2019100601 to POST\"\n[1] \"ARI: 26 @ CIN: 23\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100602 is over.\"\n[1] \"Changing the state of game for 2019100602 to POST\"\n[1] \"ATL: 32 @ HOU: 53\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100603 is over.\"\n[1] \"Changing the state of game for 2019100603 to POST\"",
        "\n[1] \"TB: 24 @ NO: 31\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100604 is over.\"\n[1] \"Changing the state of game for 2019100604 to POST\"\n[1] \"MIN: 28 @ NYG: 10\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100605 is over.\"\n[1] \"Changing the state of game for 2019100605 to POST\"\n[1] \"CHI: 21 @ OAK: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100606 is over.\"\n[1] \"Changing the state of game for 2019100606 to POST\"\n[1] \"NYJ: 6 @ PHI: 31\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100610 is over.\"\n[1] \"Changing the state of game for 2019100610 to POST\"",
        "\n[1] \"DEN: 20 @ LAC: 13\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100611 is over.\"\n[1] \"Changing the state of game for 2019100611 to POST\"\n[1] \"GB: 34 @ DAL: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100612 is over.\"\n[1] \"Changing the state of game for 2019100612 to POST\"\n[1] \"IND: 19 @ KC: 13\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019100700 is over.\"\n[1] \"Changing the state of game for 2019100700 to POST\"\n[1] \"CLE: 3 @ SF: 31\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101000 is over.\"\n[1] \"Changing the state of game for 2019101000 to POST\"",
        "\n[1] \"NYG: 14 @ NE: 35\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101300 is over.\"\n[1] \"Changing the state of game for 2019101300 to POST\"\n[1] \"CAR: 37 @ TB: 26\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101305 is over.\"\n[1] \"Changing the state of game for 2019101305 to POST\"\n[1] \"WAS: 17 @ MIA: 16\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101306 is over.\"\n[1] \"Changing the state of game for 2019101306 to POST\"\n[1] \"PHI: 20 @ MIN: 38\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101304 is over.\"\n[1] \"Changing the state of game for 2019101304 to POST\"",
        "\n[1] \"HOU: 31 @ KC: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101303 is over.\"\n[1] \"Changing the state of game for 2019101303 to POST\"\n[1] \"NO: 13 @ JAX: 6\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101302 is over.\"\n[1] \"Changing the state of game for 2019101302 to POST\"\n[1] \"SEA: 32 @ CLE: 28\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101301 is over.\"\n[1] \"Changing the state of game for 2019101301 to POST\"\n[1] \"CIN: 17 @ BAL: 23\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101308 is over.\"\n[1] \"Changing the state of game for 2019101308 to POST\"",
        "\n[1] \"SF: 20 @ LA: 7\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101307 is over.\"\n[1] \"Changing the state of game for 2019101307 to POST\"\n[1] \"ATL: 33 @ ARI: 34\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101310 is over.\"\n[1] \"Changing the state of game for 2019101310 to POST\"\n[1] \"DAL: 22 @ NYJ: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101309 is over.\"\n[1] \"Changing the state of game for 2019101309 to POST\"\n[1] \"TEN: 0 @ DEN: 16\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101311 is over.\"\n[1] \"Changing the state of game for 2019101311 to POST\"",
        "\n[1] \"PIT: 24 @ LAC: 17\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101400 is over.\"\n[1] \"Changing the state of game for 2019101400 to POST\"\n[1] \"DET: 22 @ GB: 23\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019101700 is over.\"\n[1] \"Changing the state of game for 2019101700 to POST\"\n[1] \"KC: 30 @ DEN: 6\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102001 is over.\"\n[1] \"Changing the state of game for 2019102001 to POST\"\n[1] \"MIA: 21 @ BUF: 31\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102002 is over.\"\n[1] \"Changing the state of game for 2019102002 to POST\"",
        "\n[1] \"JAX: 26 @ CIN: 17\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102003 is over.\"\n[1] \"Changing the state of game for 2019102003 to POST\"\n[1] \"MIN: 42 @ DET: 30\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102004 is over.\"\n[1] \"Changing the state of game for 2019102004 to POST\"\n[1] \"OAK: 24 @ GB: 42\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102000 is over.\"\n[1] \"Changing the state of game for 2019102000 to POST\"\n[1] \"LA: 37 @ ATL: 10\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102005 is over.\"\n[1] \"Changing the state of game for 2019102005 to POST\"",
        "\n[1] \"HOU: 23 @ IND: 30\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102007 is over.\"\n[1] \"Changing the state of game for 2019102007 to POST\"\n[1] \"SF: 9 @ WAS: 0\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102006 is over.\"\n[1] \"Changing the state of game for 2019102006 to POST\"\n[1] \"ARI: 27 @ NYG: 20\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102008 is over.\"\n[1] \"Changing the state of game for 2019102008 to POST\"\n[1] \"LAC: 20 @ TEN: 23\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102009 is over.\"\n[1] \"Changing the state of game for 2019102009 to POST\"",
        "\n[1] \"NO: 36 @ CHI: 25\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102010 is over.\"\n[1] \"Changing the state of game for 2019102010 to POST\"\n[1] \"BAL: 30 @ SEA: 16\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102011 is over.\"\n[1] \"Changing the state of game for 2019102011 to POST\"\n[1] \"PHI: 10 @ DAL: 37\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102100 is over.\"\n[1] \"Changing the state of game for 2019102100 to POST\"\n[1] \"NE: 33 @ NYJ: 0\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102400 is over.\"\n[1] \"Changing the state of game for 2019102400 to POST\"",
        "\n[1] \"WAS: 9 @ MIN: 19\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102700 is over.\"\n[1] \"Changing the state of game for 2019102700 to POST\"\n[1] \"SEA: 27 @ ATL: 20\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102710 is over.\"\n[1] \"Changing the state of game for 2019102710 to POST\"\n[1] \"DEN: 13 @ IND: 15\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102708 is over.\"\n[1] \"Changing the state of game for 2019102708 to POST\"\n[1] \"TB: 23 @ TEN: 27\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102707 is over.\"\n[1] \"Changing the state of game for 2019102707 to POST\"",
        "\n[1] \"ARI: 9 @ NO: 31\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102706 is over.\"\n[1] \"Changing the state of game for 2019102706 to POST\"\n[1] \"CIN: 10 @ LA: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102701 is over.\"\n[1] \"Changing the state of game for 2019102701 to POST\"\n[1] \"PHI: 31 @ BUF: 13\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102702 is over.\"\n[1] \"Changing the state of game for 2019102702 to POST\"\n[1] \"LAC: 17 @ CHI: 16\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102703 is over.\"\n[1] \"Changing the state of game for 2019102703 to POST\"",
        "\n[1] \"NYG: 26 @ DET: 31\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102705 is over.\"\n[1] \"Changing the state of game for 2019102705 to POST\"\n[1] \"NYJ: 15 @ JAX: 29\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102709 is over.\"\n[1] \"Changing the state of game for 2019102709 to POST\"\n[1] \"CAR: 13 @ SF: 57\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102704 is over.\"\n[1] \"Changing the state of game for 2019102704 to POST\"\n[1] \"OAK: 24 @ HOU: 27\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102711 is over.\"\n[1] \"Changing the state of game for 2019102711 to POST\"",
        "\n[1] \"CLE: 13 @ NE: 27\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102712 is over.\"\n[1] \"Changing the state of game for 2019102712 to POST\"\n[1] \"GB: 31 @ KC: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019102800 is over.\"\n[1] \"Changing the state of game for 2019102800 to POST\"\n[1] \"MIA: 14 @ PIT: 27\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019103100 is over.\"\n[1] \"Changing the state of game for 2019103100 to POST\"\n[1] \"SF: 28 @ ARI: 25\"\n[1] \"Last play:END GAME\"\n",
        "\n",
        "> ",
        "# set custom variables",
        "> ",
        "  userYear <- 2019 ##necessary for saved ",
        "> ",
        "  userWeek <- 10 ##not necessary at the moment",
        "> ",
        "  today <- Sys.Date()",
        "> ",
        "  ",
        "> ",
        "    # test date",
        "> ",
        "  date <- 201911",
        "> ",
        "##  date <- format(today, format=\"%Y%m%d\")",
        "> ",
        "  ",
        "> ",
        "  fgame_ids <- paste(\"data/games/reg_season/reg_games_\", userYear, \".csv\", sep =\"\")",
        "> ",
        "  ",
        "> ",
        "  ",
        "> ",
        "game_ids <- read.csv(fgame_ids, check.names = FALSE)",
        "> ",
        "",
        "> ",
        "currentGameIDs <- game_ids$game_id",
        "> ",
        "#pull games in 2019 season that match today's date",
        "> ",
        "currentGames <- grep(date, currentGameIDs)",
        "> ",
        "games_in_play <- currentGameIDs[currentGames]",
        "> ",
        "",
        "> ",
        "##can't figure this out yet",
        "> ",
        "#  ",
        "> ",
        "#  games_in_play <- game_ids$state_of_game[currentGames] != \"POST\"",
        "> ",
        "#",
        "> ",
        "#  nplay <- length(games_in_play)",
        "> ",
        "#  nplayLoop <- 1",
        "> ",
        "#",
        "> ",
        "",
        "> ",
        "# scrape pbp of active games",
        "> ",
        "",
        "> ",
        "# if 0 games, scrape scores",
        "> ",
        "for (x in games_in_play)",
        "+ ",
        "  {",
        "+ ",
        "  f <- paste(\"data/games/\", userYear, \"/\", x, \".csv\", sep = \"\")",
        "+ ",
        "  fplayers <-  paste(\"data/players/\", userYear, \"/\", x, \"players\", \".csv\", sep = \"\")",
        "+ ",
        "  ",
        "+ ",
        "  if (file.exists(fplayers)==TRUE & grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE)",
        "+ ",
        "  {",
        "+ ",
        "    xplayers <- player_game(x)",
        "+ ",
        "    write.csv(xplayers, fplayers, row.names = FALSE)",
        "+ ",
        "  } else {",
        "+ ",
        "    xplayers <- player_game(x)",
        "+ ",
        "    write.csv(xplayers, fplayers, row.names = FALSE)",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  if (file.exists(f)==TRUE)",
        "+ ",
        "    {",
        "+ ",
        "    ",
        "+ ",
        "    #read game csv",
        "+ ",
        "    y <- read.csv(f, check.names=FALSE)",
        "+ ",
        "    tail(y)",
        "+ ",
        "    ",
        "+ ",
        "    #check if y$desc contains \"END GAME\"",
        "+ ",
        "    #if x has END GAME change state_of_game to POST",
        "+ ",
        "    if (grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE)",
        "+ ",
        "      {",
        "+ ",
        "      print(paste(\"Game\", x, \"is over.\", sep = \" \"))",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"state_of_game\"] <- \"POST\"",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"away_score\"] <- y$total_away_score[nrow(y)]",
        "+ ",
        "      game_ids[game_ids$game_id == x, \"home_score\"] <- y$total_home_score[nrow(y)]",
        "+ ",
        "      print(paste(\"Changing the state of game for\", x, \"to POST\", sep = \" \"))",
        "+ ",
        "      write.csv(game_ids, fgame_ids, row.names = FALSE)",
        "+ ",
        "    }",
        "+ ",
        "    else",
        "+ ",
        "      {",
        "+ ",
        "      #scrape",
        "+ ",
        "      print(paste(\"Scraping game \", x, sep = \"\"))",
        "+ ",
        "      print(paste(game_ids[game_ids$game_id == x, \"away_team\"], \"vs\", game_ids[game_ids$game_id == x, \"home_team\"], sep = \" \"))",
        "+ ",
        "      y <- scrape_json_play_by_play(x)",
        "+ ",
        "      tail(y)",
        "+ ",
        "      game_ids$X <- NULL ## annoying glitch",
        "+ ",
        "      if (grepl(\"END GAME\", y$desc[nrow(y)]) == TRUE) {",
        "+ ",
        "        print(paste(\"Game\", x, \"is over.\", sep = \" \"))",
        "+ ",
        "          print(paste(game_ids[game_ids$game_id == x, \"away_team\"], \"vs\", game_ids[game_ids$game_id == x, \"home_team\"], sep = \" \"))",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"state_of_game\"] <- \"POST\"",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"away_score\"] <- y$total_away_score[nrow(y)]",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"home_score\"] <- y$total_home_score[nrow(y)]",
        "+ ",
        "        print(paste(\"Changing the state of game for \", x, \" to POST\", sep = \"\"))",
        "+ ",
        "        write.csv(game_ids, fgame_ids, row.names=FALSE)",
        "+ ",
        "        }",
        "+ ",
        "      write.csv(y, file = paste(\"data/games/\", userYear,\"/\", x, \".csv\", sep = \"\"), row.names=FALSE)",
        "+ ",
        "      }",
        "+ ",
        "  }",
        "+ ",
        "  else",
        "+ ",
        "    {",
        "+ ",
        "    print(paste(\"Scraping game\", x, sep = \" \"))",
        "+ ",
        "    print(",
        "+ ",
        "      paste(",
        "+ ",
        "        game_ids[",
        "+ ",
        "        game_ids$game_id == x, \"away_team\"], ",
        "+ ",
        "        \"vs\", ",
        "+ ",
        "        game_ids[game_ids$game_id == x, \"home_team\"], ",
        "+ ",
        "        sep = \" \"",
        "+ ",
        "        )",
        "+ ",
        "      )",
        "+ ",
        "    y <- scrape_json_play_by_play(x)",
        "+ ",
        "    tail(y)",
        "+ ",
        "    write.csv(y, file = paste(\"data/games/\", userYear,\"/\", x, \".csv\", sep = \"\"), row.names=FALSE)",
        "+ ",
        "    }",
        "+ ",
        "  xawayscore <- y$total_away_score[nrow(y)]",
        "+ ",
        "  xawayteam <- y$away_team[1]",
        "+ ",
        "  xhomescore <- y$total_home_score[nrow(y)]",
        "+ ",
        "  xhometeam <- y$home_team[1]",
        "+ ",
        "  print(paste(xawayteam, \": \", xawayscore, \" @ \", xhometeam, \": \", xhomescore, sep = \"\"))",
        "+ ",
        "  ",
        "+ ",
        "  print(paste(\"Last play:\", y$desc[nrow(y)], sep=\"\"))",
        "+ ",
        "  }",
        "[1] \"Game 2019110300 is over.\"\n[1] \"Changing the state of game for 2019110300 to POST\"\n[1] \"HOU: 26 @ JAX: 3\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110305 is over.\"\n[1] \"Changing the state of game for 2019110305 to POST\"\n[1] \"CHI: 14 @ PHI: 22\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110306 is over.\"\n[1] \"Changing the state of game for 2019110306 to POST\"\n[1] \"IND: 24 @ PIT: 26\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110304 is over.\"\n[1] \"Changing the state of game for 2019110304 to POST\"\n[1] \"NYJ: 18 @ MIA: 26\"",
        "\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110303 is over.\"\n[1] \"Changing the state of game for 2019110303 to POST\"\n[1] \"MIN: 23 @ KC: 26\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110302 is over.\"\n[1] \"Changing the state of game for 2019110302 to POST\"\n[1] \"TEN: 20 @ CAR: 30\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110301 is over.\"\n[1] \"Changing the state of game for 2019110301 to POST\"\n[1] \"WAS: 9 @ BUF: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110308 is over.\"\n[1] \"Changing the state of game for 2019110308 to POST\"",
        "\n[1] \"TB: 34 @ SEA: 40\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110307 is over.\"\n[1] \"Changing the state of game for 2019110307 to POST\"\n[1] \"DET: 24 @ OAK: 31\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110310 is over.\"\n[1] \"Changing the state of game for 2019110310 to POST\"\n[1] \"GB: 11 @ LAC: 26\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110309 is over.\"\n[1] \"Changing the state of game for 2019110309 to POST\"\n[1] \"CLE: 19 @ DEN: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110311 is over.\"\n[1] \"Changing the state of game for 2019110311 to POST\"",
        "\n[1] \"NE: 20 @ BAL: 37\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110400 is over.\"\n[1] \"Changing the state of game for 2019110400 to POST\"\n[1] \"DAL: 37 @ NYG: 18\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019110700 is over.\"\n[1] \"Changing the state of game for 2019110700 to POST\"\n[1] \"LAC: 24 @ OAK: 26\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111001 is over.\"\n[1] \"Changing the state of game for 2019111001 to POST\"\n[1] \"BAL: 49 @ CIN: 13\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111002 is over.\"\n[1] \"Changing the state of game for 2019111002 to POST\"",
        "\n[1] \"BUF: 16 @ CLE: 19\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111000 is over.\"\n[1] \"Changing the state of game for 2019111000 to POST\"\n[1] \"DET: 13 @ CHI: 20\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111005 is over.\"\n[1] \"Changing the state of game for 2019111005 to POST\"\n[1] \"NYG: 27 @ NYJ: 34\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111007 is over.\"\n[1] \"Changing the state of game for 2019111007 to POST\"\n[1] \"KC: 32 @ TEN: 35\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111006 is over.\"\n[1] \"Changing the state of game for 2019111006 to POST\"",
        "\n[1] \"ARI: 27 @ TB: 30\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111004 is over.\"\n[1] \"Changing the state of game for 2019111004 to POST\"\n[1] \"ATL: 26 @ NO: 9\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111008 is over.\"\n[1] \"Changing the state of game for 2019111008 to POST\"\n[1] \"MIA: 16 @ IND: 12\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111009 is over.\"\n[1] \"Changing the state of game for 2019111009 to POST\"\n[1] \"LA: 12 @ PIT: 17\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111003 is over.\"\n[1] \"Changing the state of game for 2019111003 to POST\"",
        "\n[1] \"CAR: 16 @ GB: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Game 2019111010 is over.\"\n[1] \"Changing the state of game for 2019111010 to POST\"\n[1] \"MIN: 28 @ DAL: 24\"\n[1] \"Last play:END GAME\"\n[1] \"Scraping game 2019111100\"\n[1] \"SEA vs SF\"\n[1] \"SEA: 20 @ SF: 10\"\n[1] \"Last play:(14:13) M.Wishnowsky punts 65 yards to end zone, Center-K.Nelson, Touchback.\"\n",
        "Connection to API disrupted, please re-run code. If multiple failures, then there is no data available for this game yet.\n",
        "Here is the url: http://www.nfl.com/liveupdate/game-center/2019111400/2019111400_gtd.json\n",
        "Here's the original error message:\n",
        "cannot open the connection",
        "Error: $ operator is invalid for atomic vectors\n",
        "> ",
        "tail(pbp2019)",
        "[38;5;246m# A tibble: 6 x 260[39m\n  game_id home_team away_team posteam posteam_type defteam side_of_field yardline_100 game_date  quarter_secondsâ€¦\n    [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<chr>[39m[23m     [3m[38;5;246m<chr>[39m[23m     [3m[38;5;246m<chr>[39m[23m   [3m[38;5;246m<chr>[39m[23m        [3m[38;5;246m<chr>[39m[23m   [3m[38;5;246m<chr>[39m[23m                [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<date>[39m[23m                [3m[38;5;246m<dbl>[39m[23m\n",
        "[38;5;250m1[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     ARI                     49 2019-10-31              137\n[38;5;250m2[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     SF                      51 2019-10-31              137\n[38;5;250m3[39m  2.02[38;5;246me[39m9 ARI       SF        [31mNA[39m      [31mNA[39m           [31mNA[39m      SF                      [31mNA[39m 2019-10-31              120\n[38;5;250m4[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     ARI                     43 2019-10-31              120\n",
        "[38;5;250m5[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     ARI                     48 2019-10-31              120\n[38;5;250m6[39m  2.02[38;5;246me[39m9 ARI       SF        SF      away         ARI     ARI                     37 2019-10-31               76\n[38;5;246m# â€¦ with 250 more variables: half_seconds_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, game_seconds_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, game_half [3m[38;5;246m<chr>[38;5;246m[23m,\n#   quarter_end [3m[38;5;246m<dbl>[38;5;246m[23m, drive [3m[38;5;246m<dbl>[38;5;246m[23m, sp [3m[38;5;246m<dbl>[38;5;246m[23m, qtr [3m[38;5;246m<dbl>[38;5;246m[23m, down [3m[38;5;246m<dbl>[38;5;246m[23m, goal_to_go [3m[38;5;246m<dbl>[38;5;246m[23m, time [3m[38;5;246m<time>[38;5;246m[23m, yrdln [3m[38;5;246m<chr>[38;5;246m[23m,\n#   ydstogo [3m[38;5;246m<dbl>[38;5;246m[23m, ydsnet [3m[38;5;246m<dbl>[38;5;246m[23m, desc [3m[38;5;246m<chr>[38;5;246m[23m, play_type [3m[38;5;246m<chr>[38;5;246m[23m, yards_gained [3m[38;5;246m<dbl>[38;5;246m[23m, shotgun [3m[38;5;246m<dbl>[38;5;246m[23m, no_huddle [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   qb_dropback [3m[38;5;246m<dbl>[38;5;246m[23m, qb_kneel [3m[38;5;246m<dbl>[38;5;246m[23m, qb_spike [3m[38;5;246m<dbl>[38;5;246m[23m, qb_scramble [3m[38;5;246m<dbl>[38;5;246m[23m, pass_length [3m[38;5;246m<chr>[38;5;246m[23m, pass_location [3m[38;5;246m<chr>[38;5;246m[23m,\n#   air_yards [3m[38;5;246m<dbl>[38;5;246m[23m, yards_after_catch [3m[38;5;246m<dbl>[38;5;246m[23m, run_location [3m[38;5;246m<chr>[38;5;246m[23m, run_gap [3m[38;5;246m<chr>[38;5;246m[23m, field_goal_result [3m[38;5;246m<chr>[38;5;246m[23m,\n#   kick_distance [3m[38;5;246m<dbl>[38;5;246m[23m, extra_point_result [3m[38;5;246m<chr>[38;5;246m[23m, two_point_conv_result [3m[38;5;246m<chr>[38;5;246m[23m, home_timeouts_remaining [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   away_timeouts_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, timeout [3m[38;5;246m<dbl>[38;5;246m[23m, timeout_team [3m[38;5;246m<chr>[38;5;246m[23m, td_team [3m[38;5;246m<chr>[38;5;246m[23m,\n#   posteam_timeouts_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, defteam_timeouts_remaining [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_score [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_score [3m[38;5;246m<dbl>[38;5;246m[23m, posteam_score [3m[38;5;246m<dbl>[38;5;246m[23m, defteam_score [3m[38;5;246m<dbl>[38;5;246m[23m, score_differential [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   posteam_score_post [3m[38;5;246m<dbl>[38;5;246m[23m, defteam_score_post [3m[38;5;246m<dbl>[38;5;246m[23m, score_differential_post [3m[38;5;246m<dbl>[38;5;246m[23m, no_score_prob [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   opp_fg_prob [3m[38;5;246m<dbl>[38;5;246m[23m, opp_safety_prob [3m[38;5;246m<dbl>[38;5;246m[23m, opp_td_prob [3m[38;5;246m<dbl>[38;5;246m[23m, fg_prob [3m[38;5;246m<dbl>[38;5;246m[23m, safety_prob [3m[38;5;246m<dbl>[38;5;246m[23m, td_prob [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   extra_point_prob [3m[38;5;246m<dbl>[38;5;246m[23m, two_point_conversion_prob [3m[38;5;246m<dbl>[38;5;246m[23m, ep [3m[38;5;246m<dbl>[38;5;246m[23m, epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_rush_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_rush_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_pass_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_pass_epa [3m[38;5;246m<dbl>[38;5;246m[23m, air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m, comp_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, comp_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_home_comp_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_comp_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_comp_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_comp_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_raw_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_raw_air_epa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_home_raw_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_raw_yac_epa [3m[38;5;246m<dbl>[38;5;246m[23m, wp [3m[38;5;246m<dbl>[38;5;246m[23m, def_wp [3m[38;5;246m<dbl>[38;5;246m[23m, home_wp [3m[38;5;246m<dbl>[38;5;246m[23m, away_wp [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   wpa [3m[38;5;246m<dbl>[38;5;246m[23m, home_wp_post [3m[38;5;246m<dbl>[38;5;246m[23m, away_wp_post [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_rush_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_rush_wpa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_home_pass_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_pass_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, comp_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   comp_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_comp_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_comp_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_comp_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_away_comp_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_home_raw_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_raw_air_wpa [3m[38;5;246m<dbl>[38;5;246m[23m,\n#   total_home_raw_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, total_away_raw_yac_wpa [3m[38;5;246m<dbl>[38;5;246m[23m, punt_blocked [3m[38;5;246m<dbl>[38;5;246m[23m, â€¦[39m\n",
        "> ",
        "?readRDS",
        "> ",
        "install.packages(\"tidyverse\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"na.tools\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"ggimage\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n"
    ],
    "type" : [
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2
    ]
}