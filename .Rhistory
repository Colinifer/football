mutate(target = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(season, receiver_id) %>%
summarize(
targets = sum(target, na.rm = T),
catches = sum(actual_outcome, na.rm = T),
PPR_pts = sum(actual_PPR_points, na.rm = T),
exp_PPR_pts = sum(exp_PPR_points, na.rm = T)
)
#fant_pt_avg_df %>% view
properLims <- function(vec) {
labs <- labeling::extended(min(vec, na.rm = T), max(vec, na.rm = T), m = 5)
gap <- diff(labs[1:2])
plot_max <- ifelse(rev(labs)[1] < max(vec, na.rm = T), rev(labs)[1] + gap, rev(labs)[1])
plot_min <- ifelse(labs[1] > min(vec, na.rm = T), labs[1] - gap, labs[1])
return(c(plot_min,plot_max))
}
grob_img_adj <- function(img_url,
alpha = 0,
whitewash = 0) {
return(lapply(img_url, function(x) {
if (is.na(x)) {
return(NULL)
} else{
img <- image_read(x)[[1]]
img[1, , ] <-
as.raw(255 - (255 - as.integer(img[1, , ])) * (1 - whitewash))
img[2, , ] <-
as.raw(255 - (255 - as.integer(img[2, , ])) * (1 - whitewash))
img[3, , ] <-
as.raw(255 - (255 - as.integer(img[3, , ])) * (1 - whitewash))
img[4, , ] <- as.raw(as.integer(img[4, , ]) * (1 - alpha))
return(grid::rasterGrob(image = image_read(img)))
}
}))
}
p <- fant_pt_avg_df %>%
mutate(
season = 2019,
exp_PPR_diff = PPR_pts - exp_PPR_pts,
exp_PPR_pts_targ = exp_PPR_pts/targets
) %>%
left_join(roster_df, by = c('receiver_id' = 'ID', 'season' = 'team.season')) %>%
mutate(abbr.name = paste0(substr(teamPlayers.firstName, 1, 1), '.', teamPlayers.lastName)) %>%
filter(!is.na(receiver_id) & targets >= 75 & teamPlayers.position == 'WR') %>%
ggplot(aes(x = PPR_pts, y = exp_PPR_pts, label = abbr.name)) +
geom_grob(aes(x = PPR_pts, y = exp_PPR_pts, label = grob_img_adj(ESPN_logo_url(team.abbr), alpha = .4), vp.height = 0.06)) +
# geom_text_repel(aes(label = abbr.name), color = 'darkblue', size = 1.3, family = font_SB, bg.color = 'white', bg.r = 0.2, point.padding = 0, min.segment.length = 10, box.padding = 0.1) +
geom_text_repel(aes(label = abbr.name), color = 'darkblue', size = 1.3, point.padding = 0, min.segment.length = 10, box.padding = 0.1) +
scale_x_continuous(limits = properLims) +
scale_y_continuous(limits = properLims) +
labs(title = 'Expected & Actual WR Fantasy Points, 2019',
subtitle = 'min. 75 Targets',
x = 'Actual PPR Fantasy Points',
y = 'Expected\nPPR\nFantasy\nPoints') +
theme_SB +
theme(plot.margin = margin(c(7.5,10,7.5,7.5), unit = 'pt'))
brand_plot(p, save_name = 'exp PPR WR.png', data_home = 'Data: @nflfastR', fade_borders = 'tr')
# 2020
pbp_df <- readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_2020.rds'))
proj_name <- "football"
pkgs <- c(
"devtools",
"tidyverse",
"nflfastR",
"DBI",
"odbc",
"RMariaDB",
"distill",
"httr",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"jsonlite",
"RJSONIO",
"tictoc",
"animation",
"gt",
"png",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggpmisc",
"ggbeeswarm",
"cowplot",
"gridExtra",
"grid",
"extrafont",
"shadowtext",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
# Detach all packages
# lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE)
rm(pkgs, installed_packages)
source("../initR/init.R")
fx.setdir(proj_name)
# 2020
pbp_df <- readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_2020.rds'))
# 2020
pbp_df <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_2020.rds'))
# 2020
pbp_df <- readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_2020.rds?raw=true'))
roster_df <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/roster-data/roster.rds')) %>%
left_join(readRDS("../GitHub/Cloned/ajrein-NFL/nflfastR ID mapping/gsis_map.rds"), by = c('teamPlayers.gsisId' = 'gsis')) %>%
mutate(ID = ifelse(is.na(ID), teamPlayers.gsisId, ID))
pbp_df <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_2019.rds'))
pbp_df <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_2019.rds'))
pbp_df <- readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_2020.rds?raw=true'))
avg_exp_fp_df <- pbp_df %>%
filter(pass_attempt==1 & season_type=='REG' & two_point_attempt==0 & !is.na(receiver_id)) %>%
add_xyac_dist %>%
select(season = season.x, game_id, play_id, posteam = posteam.x, receiver, yardline_100 = yardline_100.x, air_yards = air_yards.x, actual_yards_gained = yards_gained, complete_pass, cp, yac_prob = prob, gain) %>%
mutate(
gain = ifelse(yardline_100==air_yards, yardline_100, gain),
yac_prob = ifelse(yardline_100==air_yards, 1, yac_prob),
PPR_points = 1 + gain/10 + ifelse(gain == yardline_100, 6, 0),
half_PPR_points = .5 + gain/10 + ifelse(gain == yardline_100, 6, 0),
catch_run_prob = cp * yac_prob,
exp_PPR_points = PPR_points * catch_run_prob,
exp_half_PPR_points = half_PPR_points * catch_run_prob,
exp_yards = gain * catch_run_prob,
actual_outcome = ifelse(actual_yards_gained==gain & complete_pass==1, 1, 0),
actual_PPR_points = ifelse(actual_outcome==1, PPR_points, 0),
actual_half_PPR_points = ifelse(actual_outcome==1, half_PPR_points, 0),
target = 0,
game_played = 0,
)  %>%
group_by(game_id, receiver) %>%
mutate(game_played = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(game_id, play_id, receiver) %>%
mutate(target = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(posteam, receiver) %>%
summarize(
games = sum(game_played, na.rm = T),
targets = sum(target, na.rm = T),
catches = sum(actual_outcome, na.rm = T),
yards = sum(ifelse(actual_outcome==1, gain, 0), na.rm = T),
td = sum(ifelse(gain==yardline_100, actual_outcome, 0), na.rm = T),
PPR_pts = sum(actual_PPR_points, na.rm = T),
half_PPR_pts = sum(actual_half_PPR_points, na.rm = T),
exp_catches = sum(ifelse(target==1, cp, NA), na.rm = T),
exp_yards = sum(exp_yards, na.rm = T),
exp_td = sum(ifelse(gain==yardline_100, catch_run_prob, 0), na.rm = T),
exp_PPR_pts = sum(exp_PPR_points, na.rm = T),
exp_half_PPR_pts = sum(exp_half_PPR_points, na.rm = T)
) %>%
mutate(
half_ppr_pts_diff = half_PPR_pts - exp_half_PPR_pts,
ppr_pts_diff = PPR_pts - exp_PPR_pts
) %>%
ungroup
library(gt)
# make the table
# 1/2 PPR xFP table
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
half_PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_half_PPR_pts,
half_ppr_pts_diff
) %>%
arrange(-exp_half_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving 1/2 PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
half_PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_half_PPR_pts = 'FP',
half_ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, half_PPR_pts, exp_half_PPR_pts, half_ppr_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, half_PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_half_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(half_PPR_pts, exp_half_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(100, 380)), # anyway to automate?
autocolor_text = FALSE
) %>%
data_color(
columns = vars(half_ppr_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$half_ppr_pts_diff), min(avg_exp_fp_df$half_ppr_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_half_ppr_", pbp_df$season[1], ".png"), path = "fantasy_football/plots")
# Full PPR xFP table
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_PPR_pts,
ppr_pts_diff
) %>%
arrange(-exp_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_PPR_pts = 'FP',
ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, PPR_pts, exp_PPR_pts, ppr_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(PPR_pts, exp_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(100, 380)), # need to adjust for full PPR point scale
autocolor_text = FALSE
) %>%
data_color(
columns = vars(ppr_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$ppr_pts_diff), min(avg_exp_fp_df$ppr_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_ppr_", pbp_df$season[1], ".png"), path = "fantasy_football/plots")
team_df <- read.csv('plots/assets/nfl_logo.csv', stringsAsFactors = F)
pff_id <- read.csv('data/players/All_Player_Info.csv', stringsAsFactors = F)
team_df$team_code[which(team_df$team_code=='OAK')] <- 'LV'
team_df$posteam[which(team_df$posteam=='OAK')] <- 'LV'
pff_id$team.abbreviation[which(pff_id$team.abbreviation=='OAK')] <- 'LV'
pff_id$team.city[which(pff_id$team.city=='Oakland')] <- 'Las Vegas'
pff_id$team.slug[which(pff_id$team.slug=='okland-raiders')] <- 'las-vegas-raiders'
yr_pbp <- pbp_df
yr_pbp[[1]]
pbp_NFL$posteam[which(pbp_NFL$posteam=='SD')] <- 'LAC'
pbp_NFL$posteam[which(pbp_NFL$posteam=='JAC')] <- 'JAX'
pbp_NFL$posteam[which(pbp_NFL$posteam=='STL')] <- 'LA'
pbp_NFL$posteam[which(pbp_NFL$posteam=='OAK')] <- 'LV'
pbp_NFL$team_player <- paste0(pbp_NFL$receiver_player_id,'_',pbp_NFL$posteam)
pbp_NFL <- pbp_df
rm(yr_pbp)
yr <- 2020
pbp_NFL$team_player <- paste0(pbp_NFL$receiver_player_id,'_',pbp_NFL$posteam)
# need to map correct IDs
adot_agg_df <- aggregate(cbind(air_yards,pass_attempt) ~ receiver_player_id + posteam + team_player + receiver_player_name, data = pbp_NFL, FUN = sum)
#adot_agg_df <- adot_agg_df[which(adot_agg_df$pass_attempt>=40),]
adot_agg_df <- adot_agg_df[order(-adot_agg_df$pass_attempt),]
adot_agg_df$tm_targ_order <- sapply(1:nrow(adot_agg_df), function(x) length(which(adot_agg_df$posteam[x]==adot_agg_df$posteam[1:x])))
adot_agg_df <- adot_agg_df[which(adot_agg_df$tm_targ_order <= 5),]
adot_agg_df$ADOT <- adot_agg_df$air_yards / adot_agg_df$pass_attempt
# Order by ADOT
adot_agg_df <- adot_agg_df[order(adot_agg_df$ADOT),]
adot_agg_df$tm_ADOT_order <- sapply(1:nrow(adot_agg_df), function(x) length(which(adot_agg_df$posteam[x]==adot_agg_df$posteam[1:x])))
# Order by Pass Attempt
adot_agg_df <- adot_agg_df[order(adot_agg_df$pass_attempt),]
adot_agg_df$tm_targ_order <- sapply(1:nrow(adot_agg_df), function(x) length(which(adot_agg_df$posteam[x]==adot_agg_df$posteam[1:x])))
freq_passers <- pbp_NFL[which(pbp_NFL$team_player %in% adot_agg_df$team_player),]
freq_passers$full_name <- pff_id$full_name[match(freq_passers$receiver_player_id, pff_id$nflfastR_id)]
freq_passers <- merge(freq_passers, adot_agg_df, by = 'team_player', suffixes = c('','_agg'))
freq_passers$tm_ADOT_order <- factor(freq_passers$tm_ADOT_order,1:5)
freq_passers$tm_targ_order <- factor(freq_passers$tm_targ_order,1:5)
freq_passers$posteam <- factor(freq_passers$posteam, team_df$team_code[order(team_df$division)])
fill_col <- team_df$primary
outline_col <- team_df$secondary
names(fill_col) <- team_df$team_code
names(outline_col) <- team_df$team_code
headshot_df <-
data.frame(
'full_name' = adot_agg_df$receiver_player_name,
pff_url = paste0(
'http://media.pff.com/player-photos/nfl/',
pff_id$id[match(adot_agg_df$receiver_player_id, pff_id$nflfastR_id)],
'.png'
),
'posteam' = adot_agg_df$posteam,
'tm_targ_order' = factor(adot_agg_df$tm_targ_order, 1:5),
'tm_ADOT_order' = factor(adot_agg_df$tm_ADOT_order, 1:5),
stringsAsFactors = F
)
headshot_df$pff_url[which(headshot_df$pff_url == 'http://media.pff.com/player-photos/nfl/25578.png')] <-
'https://a.espncdn.com/combiner/i?img=/i/headshots/nfl/players/full/3916945.png&w=600&h=380'
headshot_df$pff_url[which(headshot_df$pff_url == 'http://media.pff.com/player-photos/nfl/48229.png')] <-
'https://a.espncdn.com/combiner/i?img=/i/headshots/nfl/players/full/3121422.png&w=600&h=380'
# headshot_df$pff_url[which(headshot_df$pff_url=='http://media.pff.com/player-photos/nfl/47931.png')] <- 'https://imagecomposer.nfl.com/?l=http://static.nfl.com/static/content/static/img/combine/2019/headshots/1400x1000/2562577.png&f=png&w=308&c=71'
headshot_df$pff_url[which(headshot_df$pff_url == 'http://media.pff.com/player-photos/nfl/47931.png')] <-
'https://a.espncdn.com/combiner/i?img=/i/headshots/college-football/players/full/4036163.png&w=600&h=380'
headshot_df$posteam <-
factor(headshot_df$posteam, team_df$team_code[order(team_df$division)])
unmatched <- adot_agg_df$receiver_player_id[is.na(match(adot_agg_df$receiver_player_id, pff_id$GSIS_ID))]
# pbp_NFL$receiver_player_name[match(unmatched, pbp_NFL$receiver_player_id)]
team_df$posteam <- factor(team_df$team_code, team_df$team_code[order(team_df$division)])
#pff_id[which(pff_id$id==48229),]
toc()
img_size_adj <- 100/(8*4)
tic()
p_new <- ggplot(freq_passers, aes(y = tm_targ_order, x = air_yards)) +
# Team Logo
geom_image(data = team_df, aes(image = logo, x = 17.5, y = 3.5), size = 0.80) +
# Team logo washed
geom_image(data = team_df, aes(image = logo, x = 17.5, y = 3.5), size = 0.80, color = 'white', alpha = 0.8) +
# Player headshot
geom_image(data = headshot_df, aes(image = pff_url, x = 38, y = tm_targ_order), size = 0.25, nudge_y = 0.5) +
geom_density_ridges2(aes(y = tm_targ_order, fill = posteam, color = posteam), scale = 1.7, size = 0.2, na.rm = T, show.legend = F, bandwidth = 2, panel_scaling = F) +
# ---------
# geom_text(aes(label = full_name, x = 35), nudge_y = .75, hjust = 1, size = 0.8 * img_size_adj, color = 'darkblue') +
# geom_text(data = team_df, aes(label = posteam, x = -1, y = 4.8), angle = 45, size = 1.5 * img_size_adj, color = 'darkblue') +
# geom_text(aes(label = 0, x = 0, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70') +
# geom_text(aes(label = 10, x = 10, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70') +
# geom_text(aes(label = 20, x = 20, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70') +
# geom_text(aes(label = 30, x = 30, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70') +
# ---------
# Player full name
geom_shadowtext(data = headshot_df, aes(label = full_name, x = 35), nudge_y = .75, hjust = 1, size = 1.1 * img_size_adj, color = 'black', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
# Team name
# geom_shadowtext(data = team_df, aes(label = posteam, x = -1, y = 5.7), angle = 45, size = 1.5 * img_size_adj, color = 'black', bg.color = 'white', bg.r = 0.1, na.rm = TRUE) +
# X Axis Labels
geom_shadowtext(aes(label = 0, x = 0, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
geom_shadowtext(aes(label = 10, x = 10, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
geom_shadowtext(aes(label = 20, x = 20, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
geom_shadowtext(aes(label = 30, x = 30, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
# Y Axis Labels
# geom_shadowtext(aes(label = 0, x = 0, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
# geom_shadowtext(aes(label = 10, x = 10, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
# geom_shadowtext(aes(label = 20, x = 20, y = 1), nudge_y = -0.15, size = 0.7 * img_size_adj, color = 'grey70', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
# geom_shadowtext(aes(label = 30, x = 30, y = 1), nudge_y = -0.15, size = 1 * img_size_adj, color = 'grey70', bg.color = 'white', bg.r = 0.15, na.rm = TRUE) +
scale_color_manual(values = outline_col) +
scale_fill_manual(values = fill_col)
toc()
tic()
ggsave(
paste0("plots/desktop/", yr, "_team_ridge_DOT_no_images.png"),
plot = p_new +
facet_wrap(~ posteam, ncol = 8, shrink = FALSE) +
labs(
title = 'Receiver Depth of Target Distribution',
subtitle = paste0(yr, " NFL Regular Season"),
x = 'Air Yards'
) +
scale_x_continuous(limits = c(-5, 40), expand = c(0, 0)) +
scale_y_discrete(expand = expansion(add = c(0.3, 1))) +
theme_bw() +
theme(
text = element_text(color = 'black'),
plot.background = element_rect(fill = 'grey95', color = 'grey95'),
panel.border = element_rect(color = 'black'),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 7),
legend.background = element_rect(fill = 'grey90', color = 'black'),
legend.key = element_blank(),
strip.background = element_blank(),
# strip.text.x = element_blank(),
panel.spacing = unit(0.1, "lines")
),
width = 25,
height = 14,
dpi = 100,
limitsize = FALSE
)
toc()
tic()
ggsave(
paste0("plots/mobile/", yr, "_team_ridge_DOT_no_images.png"),
plot = p_new +
facet_wrap(~ posteam, ncol = 4, shrink = FALSE) +
labs(
title = 'Receiver Depth of Target Distribution',
subtitle = paste0(yr, " NFL Regular Season"),
x = 'Air Yards'
) +
scale_x_continuous(limits = c(-5, 40), expand = c(0, 0)) +
scale_y_discrete(expand = expansion(add = c(0.3, 1))) +
theme_bw() +
theme(
text = element_text(color = 'black'),
plot.background = element_rect(fill = 'grey95', color = 'grey95'),
panel.border = element_rect(color = 'black'),
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title = element_text(size = 18),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 7),
legend.background = element_rect(fill = 'grey90', color = 'black'),
legend.key = element_blank(),
strip.background = element_blank(),
# strip.text.x = element_blank(),
panel.spacing = unit(0.1, "lines")
),
width = 14,
height = 25,
dpi = 100,
limitsize = FALSE
)
toc()
View(pff_id)
