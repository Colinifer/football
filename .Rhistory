)
)
print(
paste(
game_ids[
game_ids$game_id == x, "away_team"],
"vs",
game_ids[game_ids$game_id == x, "home_team"],
sep = " "
)
)
y <- scrape_json_play_by_play(x)
tail(y)
write.csv(y, file = paste("data/games/", userYear,"/", x, ".csv", sep = ""), row.names=FALSE)
}
xawayscore <- y$total_away_score[nrow(y)]
xawayteam <- y$away_team[1]
xhomescore <- y$total_home_score[nrow(y)]
xhometeam <- y$home_team[1]
print(paste(xawayteam, ": ", xawayscore, " @ ", xhometeam, ": ", xhomescore, sep = ""))
print(
paste(
"Last play:",
y$desc[nrow(y)],
sep=""
)
)
## add to the normal scrape functions
if (file.exists(fplayers)==TRUE & grepl("END GAME", y$desc[nrow(y)]) == TRUE)
{
xplayers <- player_game(x)
write.csv(xplayers, fplayers, row.names = FALSE)
print(paste("X =", x))
xpbp <- game_play_by_play(x)
addTargets(x)
} else {
## scrape player stats
xplayers <- player_game(x)
print(paste("X =", x))
xpbp <- game_play_by_play(x)
addTargets(x)
}
addTargets(x)
}
fgame_ids
list.files(paste("data/players/", userYear, "/", sep = "")
pattern = "*.csv", full.names = TRUE)
playerSeason <- list.files(paste("data/players/", userYear, "/", sep = ""),
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
playerSeason
write.csv(playerSeason, file = paste("data/players/", userYear,"players.csv", sep = ""), row.names=FALSE)
pbpSeason <- list.files(paste("data/games/", userYear, "/", sep = ""),
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
pbpSeason
write.csv(pbpSeason, file = paste("data/season_total/pbp", userYear,".csv", sep = ""), row.names=FALSE)
playerSeason <- list.files(paste("data/players/", userYear, "/", sep = ""),
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
playerSeason
write.csv(playerSeason, file = paste("data/players/", userYear,"/", userYear, "players.csv", sep = ""), row.names=FALSE)
get_season_rosters(2019)
2019roster <- get_season_rosters(2019)
2019roster <- get_season_rosters(2019)
roster <- get_season_rosters(2019)
seasonRoster <- get_season_rosters(2019)
seasonRoster <- get_season_rosters(2019)
nfl_teamcolors
nfl_teamcolors <- teamcolors %>% filter(league == "nfl")
fteams <- "data/season_total/team_abbr.csv"
teams <- read.csv(fteams)
View(teams)
for in teams {}
View(teams)
scrapeRoster <- function() {
for x in teams$nflscrapr_abbrev {
roster <- get_season_rosters(userYear, teams = x)
froster <- paste(x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
}
}
for x in teams$nflscrapr_abbrev {
roster <- get_season_rosters(userYear, teams = x)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
write.csv()
}
source('~/Documents/dev/football/scrapeRoster.R')
scrapeRoster <- function() {
for x in teams$nflscrapr_abbrev {
roster <- get_season_rosters(userYear, teams = x)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
write.csv(roster, froster, row.names = FALSE)
}
}
teams$nflscrapr_abbrev
for x in teams$nflscrapr_abbrev {
scrapeRoster <- function() {
for (x in teams$nflscrapr_abbrev) {
roster <- get_season_rosters(userYear, teams = x)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
write.csv(roster, froster, row.names = FALSE)
}
}
scrapeRoster <- function(userYear) {
for (x in teams$nflscrapr_abbrev) {
roster <- get_season_rosters(userYear, teams = x)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
write.csv(roster, froster, row.names = FALSE)
}
}
for (x in teams$nflscrapr_abbrev) {
roster <- get_season_rosters(userYear, teams = x)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
write.csv(roster, froster, row.names = FALSE)
}
for (x in teams$nflscrapr_abbrev) {
roster <- get_season_rosters(userYear, teams = x, positions = c(
"QUARTERBACK",
"RUNNING_BACK",
"WIDE_RECEIVER",
"TIGHT_END",
"DEFENSIVE_LINEMAN",
"LINEBACKER",
"DEFENSIVE_BACK",
"KICKOFF_KICKER",
"KICK_RETURNER",
"PUNTER",
"PUNT_RETURNER",
"FIELD_GOAL_KICKER",
))
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
write.csv(roster, froster, row.names = FALSE)
}
for (x in teams$nflscrapr_abbrev) {
roster <- get_season_rosters(userYear, teams = x, positions = c(
"QUARTERBACK",
"RUNNING_BACK",
"WIDE_RECEIVER",
"TIGHT_END",
"DEFENSIVE_LINEMAN",
"LINEBACKER",
"DEFENSIVE_BACK",
"KICKOFF_KICKER",
"KICK_RETURNER",
"PUNTER",
"PUNT_RETURNER",
"FIELD_GOAL_KICKER",
))
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
write.csv(roster, froster, row.names = FALSE)
}
for (x in teams$nflscrapr_abbrev) {
roster <- get_season_rosters(userYear, teams = x, positions = c(
"QUARTERBACK",
"RUNNING_BACK",
"WIDE_RECEIVER",
"TIGHT_END",
"DEFENSIVE_LINEMAN",
"LINEBACKER",
"DEFENSIVE_BACK",
"KICKOFF_KICKER",
"KICK_RETURNER",
"PUNTER",
"PUNT_RETURNER",
"FIELD_GOAL_KICKER"
))
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
write.csv(roster, froster, row.names = FALSE)
}
source('~/Documents/dev/football/scrapeRoster.R')
install.packages(c("farver", "ggimage", "hms", "knitr", "RCurl", "RJSONIO", "rmarkdown", "tinytex", "xfun", "XML"))
install.packages(c("BH", "cli", "fansi", "foreign", "prettyunits", "stringi"), lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
##Maverick - MBP
setwd("~/Documents/dev/football")
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
##Goose - iMac
setwd("~/Documents/dev/football")
device <- "Goose (iMac)"
##add Goose
}
print(paste(device, "is ready for some football", sep = " "))
rm(gid, device)
# other dependent variables
today <- Sys.Date()
#   test date
##  date <- 201912
date <- format(today, format="%Y%m%d")
userYear <- 2019 ##necessary for saved
userWeek <- 17 ##not necessary at the moment
seasonState <- "post"
fgame_ids <- paste("data/games/", seasonState, "_season/", seasonState, "_games_", userYear, ".csv", sep ="")
fteamabbr <- paste("data/season_total/team_abbr.csv", sep = "")
game_ids <- read.csv(fgame_ids)
game_ids <- scrape_game_ids(userYear, type = seasonState)
write.csv(game_ids, fgame_ids)
source("functions/scrapePBP.R")
source("functions/addTargets.R")
positions <- c(
"QUARTERBACK", "RUNNING_BACK", "WIDE_RECEIVER",
"TIGHT_END", "DEFENSIVE_LINEMAN", "LINEBACKER",
"DEFENSIVE_BACK", "KICKOFF_KICKER", "KICK_RETURNER",
"PUNTER", "PUNT_RETURNER", "FIELD_GOAL_KICKER"
)
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
fteamabbr <- paste("data/season_total/team_abbr.csv", sep = "")
teams <- read.csv(fteamabbr)
positions <- c(
"QUARTERBACK", "RUNNING_BACK", "WIDE_RECEIVER",
"TIGHT_END", "DEFENSIVE_LINEMAN", "LINEBACKER",
"DEFENSIVE_BACK", "KICKOFF_KICKER", "KICK_RETURNER",
"PUNTER", "PUNT_RETURNER", "FIELD_GOAL_KICKER"
)
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
devtools::install_github(repo = "maksimhorowitz/nflscrapR")
positions <- c(
"QUARTERBACK", "RUNNING_BACK", "WIDE_RECEIVER",
"TIGHT_END", "DEFENSIVE_LINEMAN", "LINEBACKER",
"DEFENSIVE_BACK", "KICKOFF_KICKER", "KICK_RETURNER",
"PUNTER", "PUNT_RETURNER", "FIELD_GOAL_KICKER"
)
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
positions <- c(
"QUARTERBACK", "RUNNING_BACK", "WIDE_RECEIVER",
"TIGHT_END", "DEFENSIVE_LINEMAN", "LINEBACKER",
"DEFENSIVE_BACK", "KICKOFF_KICKER", "KICK_RETURNER",
"PUNTER", "PUNT_RETURNER", "FIELD_GOAL_KICKER"
)
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
library(nflscrapR)
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
library(nflscrapR)
library(tidyverse)
library(readr)
library(pander)
library(dplyr)
library(na.tools)
library(ggimage)
library(teamcolors)
library(plyr)
library(readr)
library(glue)
library(animate)
library(animation)
library(tictoc)
install.packages(c("devtools", "tidyverse", "readr", "pander", "na.tools", "ggimage", "devtools", "teamcolors", "glue", "animate", "dplyr", "tictoc", "animation"))
install.packages(c("devtools", "tidyverse", "readr", "pander", "na.tools", "ggimage", "devtools", "teamcolors", "glue", "animate", "dplyr", "tictoc", "animation"))
install.packages(c("devtools", "tidyverse", "readr", "pander", "na.tools", "ggimage", "devtools", "teamcolors", "glue", "animate", "dplyr", "tictoc", "animation"))
install.packages(c("devtools", "tidyverse", "readr", "pander", "na.tools", "ggimage", "devtools", "teamcolors", "glue", "animate", "dplyr", "tictoc", "animation"))
install.packages(c("devtools", "tidyverse", "readr", "pander", "na.tools", "ggimage", "devtools", "teamcolors", "glue", "animate", "dplyr", "tictoc", "animation"))
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
##Maverick - MBP
setwd("~/Documents/dev/football")
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
##Goose - iMac
setwd("~/Documents/dev/football")
device <- "Goose (iMac)"
##add Goose
}
print(paste(device, "is ready for some football", sep = " "))
rm(gid, device)
# other dependent variables
today <- Sys.Date()
#   test date
##  date <- 201912
date <- format(today, format="%Y%m%d")
userYear <- 2019 ##necessary for saved
userWeek <- 17 ##not necessary at the moment
seasonState <- "post"
fgame_ids <- paste("data/games/", seasonState, "_season/", seasonState, "_games_", userYear, ".csv", sep ="")
fteamabbr <- paste("data/season_total/team_abbr.csv", sep = "")
game_ids <- read.csv(fgame_ids)
game_ids <- scrape_game_ids(userYear, type = seasonState)
write.csv(game_ids, fgame_ids)
source("functions/scrapePBP.R")
source("functions/addTargets.R")
scrapePBP(date)
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
library(nflscrapR)
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
library(nflscrapR)
library(tidyverse)
library(readr)
library(pander)
library(dplyr)
library(na.tools)
library(ggimage)
library(teamcolors)
library(plyr)
library(readr)
library(glue)
library(animate)
library(animation)
library(tictoc)
library(nflscrapR)
library(tidyverse)
library(readr)
library(pander)
library(dplyr)
library(na.tools)
library(ggimage)
library(teamcolors)
library(plyr)
library(readr)
library(glue)
library(animate)
library(animation)
library(tictoc)
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
##Maverick - MBP
setwd("~/Documents/dev/football")
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
##Goose - iMac
setwd("~/Documents/dev/football")
device <- "Goose (iMac)"
##add Goose
}
print(paste(device, "is ready for some football", sep = " "))
rm(gid, device)
# other dependent variables
today <- Sys.Date()
#   test date
##  date <- 201912
date <- format(today, format="%Y%m%d")
userYear <- 2019 ##necessary for saved
userWeek <- 17 ##not necessary at the moment
seasonState <- "post"
fgame_ids <- paste("data/games/", seasonState, "_season/", seasonState, "_games_", userYear, ".csv", sep ="")
fteamabbr <- paste("data/season_total/team_abbr.csv", sep = "")
teams <- read.csv(fteamabbr)
game_ids <- read.csv(fgame_ids)
game_ids <- scrape_game_ids(userYear, type = seasonState)
write.csv(game_ids, fgame_ids)
source("functions/scrapePBP.R")
source("functions/addTargets.R")
positions <- c(
"QUARTERBACK", "RUNNING_BACK", "WIDE_RECEIVER",
"TIGHT_END", "DEFENSIVE_LINEMAN", "LINEBACKER",
"DEFENSIVE_BACK", "KICKOFF_KICKER", "KICK_RETURNER",
"PUNTER", "PUNT_RETURNER", "FIELD_GOAL_KICKER"
)
for (x in teams$nflscrapr_abbrev[16:nrow(teams)]) {
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
for (x in teams$nflscrapr_abbrev[17:nrow(teams)]) {
print(paste("Scraping", x, userYear, "roster.", "Row #", which(teams$nflscrapr_abbrev == x), sep = " "))
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
for (x in teams$nflscrapr_abbrev[17:nrow(teams)]) {
print(paste("Scraping ", x, " ", userYear, "roster. ", "Row #", which(teams$nflscrapr_abbrev == x), sep = ""))
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
for (x in teams$nflscrapr_abbrev[17:nrow(teams)]) {
print(paste("Scraping ", x, " ", userYear, " roster. ", "Row #", which(teams$nflscrapr_abbrev == x), sep = ""))
for (p in positions) {
roster <- get_season_rosters(userYear, teams = x, positions = p)
froster <- paste("data/teams/", userYear, "/", x, userYear, "roster.csv", sep = "") #ARI2019roster.csv
if (file.exists(froster)==TRUE) {
roster <- bind_rows(roster, read.csv(froster))
roster <- roster[!duplicated(roster),]
} else  {
}
write.csv(roster, froster, row.names = FALSE)
}
}
