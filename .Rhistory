"Middle_14", "Upper_14")) %>%
filter(Metro != "NA")
pkgs <- c(
"devtools",
"tidyverse",
"readr",
"pander",
"na.tools",
"xlsx",
"gridExtra",
"ggplot2",
"dplyr",
"tidyr"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
income <- read.xlsx("/Volumes/SSD2/Downloads/Middle-Class-U.S.-Metro-Areas-5-12-16-Supplementary-Tables.xlsx",
sheetIndex = "1. Distribution, metro",
startRow = 10, colIndex = c(1:4, 6:8)) %>%
set_colnames(c("Metro", "Lower_00", "Middle_00", "Upper_00", "Lower_14",
"Middle_14", "Upper_14")) %>%
filter(Metro != "NA")
income <- read.xlsx("/Volumes/SSD2/Downloads/Middle-Class-U.S.-Metro-Areas-5-12-16-Supplementary-Tables.xlsx",
sheetIndex = "1. Distribution, metro",
startRow = 10, colIndex = c(1:4, 6:8)) %>%
set_colnames(c("Metro", "Lower_00", "Middle_00", "Upper_00", "Lower_14",
"Middle_14", "Upper_14")) %>%
filter(Metro != "NA")
getwd()
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
View(df)
income <- read.xlsx("Middle-Class-U.S.-Metro-Areas-5-12-16-Supplementary-Tables.xlsx",
sheetIndex = "1. Distribution, metro",
startRow = 10, colIndex = c(1:4, 6:8)) %>%
set_colnames(c("Metro", "Lower_00", "Middle_00", "Upper_00", "Lower_14",
"Middle_14", "Upper_14")) %>%
filter(Metro != "NA")
# Packages & Init Setup ---------------------------------------------------
proj_name <- "hockey"
# setwd("~/Documents/dev/hockey")
# devtools::install_github('bbc/bbplot')
# devtools::install_github('war-on-ice/nhlplot')
pkgs <- c(
"devtools",
"tidyverse",
"RMariaDB",
"DBI",
"readr",
"pander",
"na.tools",
"ggimage",
"devtools",
"teamcolors",
"glue",
"dplyr",
"RCurl",
"tictoc",
"animation",
"gt",
"DT",
"ggthemes",
"bbplot",
"ggtext",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"extrafont",
"RCurl",
"xml2",
"rvest",
"jsonlite",
"foreach",
"lubridate",
"snakecase",
"nhlapi",
"nhlplot"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
if (any("bbplot" %in%
rownames(installed.packages()) == FALSE)) {
library(devtools)
devtools::install_github('bbc/bbplot')
}
invisible(lapply(pkgs, library, character.only = TRUE))
rm(pkgs, installed_packages)
# Initialize Working Directory --------------------------------------------
source("../initR/init.R")
fx.setdir(proj_name)
# Create standard objects -------------------------------------------------
f.con <- "../initR/con.R"
source(f.con)
dbListTables(con)
dbDisconnect(con)
userYear <- substr(Sys.Date(), 1, 4)
userDate <- Sys.Date()
today <- format(Sys.Date(), "%Y-%d-%m")
source("EH_scrape_functions.R")
source("functions/add_to_table.R")
f.scrape <- paste0("data/", list.files(path = "data/", pattern = "pbp_scrape"))
# f.scrape[3] %>% lapply(fx.add_to_table)
# If scrape isn't caught up
# u.scrape_interval <- 250
# source("playground/addToTable.R")
# http://www.nhl.com/scores/htmlreports/20192020/RO030113.HTM # Roster
# http://www.nhl.com/scores/htmlreports/20192020/PL030113.HTM # Play by Play
# http://www.nhl.com/scores/htmlreports/20192020/GS020113.HTM # Game Summary
# http://www.nhl.com/scores/htmlreports/20192020/TV030113.HTM # Visitor TOI Shift Report
# http://www.nhl.com/scores/htmlreports/20192020/TH030113.HTM # Home TOI Shift Report
# http://www.nhl.com/scores/htmlreports/20192020/SS030113.HTM # Shot Summary
# http://www.nhl.com/scores/htmlreports/20192020/ES020967.HTM # Event Summary
getwd()
setwd("/Users/ColinWelsh/Documents/dev/football")
library(tidyverse)
source('https://github.com/mrcaseb/nflfastR/raw/master/R/helper_add_xyac.R')
source('https://github.com/mrcaseb/nflfastR/raw/master/R/helper_add_nflscrapr_mutations.R')
# YAC Distribution Function -----------------------------------------------
# duplicate the add_xyac() function that we sourced above
add_xyac_dist <- add_xyac
# separate each block of code in the add_xyac_dist() function into blocks
add_xyac_blocks <- body(add_xyac_dist) %>% as.list
# we want to remove lines 51 to 62 from the 5th item in the list
add_xyac_blocks[[5]] <- add_xyac_blocks[[5]] %>%
format %>%
.[-(51:62)] %>%
paste(collapse = '\n') %>%
str2lang
# replace the body of add_xyac_dist() with our new edited function
body(add_xyac_dist) <- add_xyac_blocks %>% as.call
# Data --------------------------------------------------------------------
pbp_df <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_2019.rds'))
avg_exp_fp_df <- pbp_df %>%
filter(pass_attempt==1 & season_type=='REG' & two_point_attempt==0 & !is.na(receiver_id)) %>%
add_xyac_dist %>%
select(season = season.x, game_id, play_id, posteam = posteam.x, receiver, yardline_100 = yardline_100.x, air_yards = air_yards.x, actual_yards_gained = yards_gained, complete_pass, cp, yac_prob = prob, gain) %>%
mutate(
gain = ifelse(yardline_100==air_yards, yardline_100, gain),
yac_prob = ifelse(yardline_100==air_yards, 1, yac_prob),
PPR_points = 1 + gain/10 + ifelse(gain == yardline_100, 6, 0),
half_PPR_points = .5 + gain/10 + ifelse(gain == yardline_100, 6, 0),
catch_run_prob = cp * yac_prob,
exp_PPR_points = PPR_points * catch_run_prob,
exp_half_PPR_points = half_PPR_points * catch_run_prob,
exp_yards = gain * catch_run_prob,
actual_outcome = ifelse(actual_yards_gained==gain & complete_pass==1, 1, 0),
actual_PPR_points = ifelse(actual_outcome==1, PPR_points, 0),
actual_half_PPR_points = ifelse(actual_outcome==1, half_PPR_points, 0),
target = 0,
game_played = 0,
)  %>%
group_by(game_id, receiver) %>%
mutate(game_played = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(game_id, play_id, receiver) %>%
mutate(target = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(posteam, receiver) %>%
summarize(
games = sum(game_played, na.rm = T),
targets = sum(target, na.rm = T),
catches = sum(actual_outcome, na.rm = T),
yards = sum(ifelse(actual_outcome==1, gain, 0), na.rm = T),
td = sum(ifelse(gain==yardline_100, actual_outcome, 0), na.rm = T),
PPR_pts = sum(actual_PPR_points, na.rm = T),
half_PPR_pts = sum(actual_half_PPR_points, na.rm = T),
exp_catches = sum(ifelse(target==1, cp, NA), na.rm = T),
exp_yards = sum(exp_yards, na.rm = T),
exp_td = sum(ifelse(gain==yardline_100, catch_run_prob, 0), na.rm = T),
exp_PPR_pts = sum(exp_PPR_points, na.rm = T),
exp_half_PPR_pts = sum(exp_half_PPR_points, na.rm = T)
) %>%
mutate(
half_ppr_pts_diff = half_PPR_pts - exp_half_PPR_pts,
ppr_pts_diff = PPR_pts - exp_PPR_pts
) %>%
ungroup
library(gt)
# make the table
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
half_PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_half_PPR_pts,
half_ppr_pts_diff
) %>%
arrange(-exp_half_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving 1/2 PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
half_PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_half_PPR_pts = 'FP',
half_ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, half_PPR_pts, exp_half_PPR_pts, exp_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, half_PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_half_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(half_PPR_pts, exp_half_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(100, 380)),
autocolor_text = FALSE
) %>%
data_color(
columns = vars(exp_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$exp_pts_diff), min(avg_exp_fp_df$exp_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_half_ppr_", pbp_df$season[1], ".png"), path = "fantasy_football/plots")
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_PPR_pts,
ppr_pts_diff
) %>%
arrange(-exp_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving 1/2 PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_PPR_pts = 'FP',
ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, PPR_pts, exp_PPR_pts, exp_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(PPR_pts, exp_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(100, 380)),
autocolor_text = FALSE
) %>%
data_color(
columns = vars(exp_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$exp_pts_diff), min(avg_exp_fp_df$exp_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_ppr_", pbp_df$season[1], ".png"), path = "plots")
library(gt)
# make the table
# 1/2 PPR xFP table
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
half_PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_half_PPR_pts,
half_ppr_pts_diff
) %>%
arrange(-exp_half_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving 1/2 PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
half_PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_half_PPR_pts = 'FP',
half_ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, half_PPR_pts, exp_half_PPR_pts, half_ppr_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, half_PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_half_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(half_PPR_pts, exp_half_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(100, 380)),
autocolor_text = FALSE
) %>%
data_color(
columns = vars(half_ppr_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$half_ppr_pts_diff), min(avg_exp_fp_df$half_ppr_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_half_ppr_", pbp_df$season[1], ".png"), path = "fantasy_football/plots")
# Full PPR xFP table
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_PPR_pts,
ppr_pts_diff
) %>%
arrange(-exp_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_PPR_pts = 'FP',
ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, PPR_pts, exp_PPR_pts, ppr_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(PPR_pts, exp_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(100, 380)),
autocolor_text = FALSE
) %>%
data_color(
columns = vars(ppr_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$ppr_pts_diff), min(avg_exp_fp_df$ppr_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_ppr_", pbp_df$season[1], ".png"), path = "plots")
