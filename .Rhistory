match.arg(slote_names)
path
sprintf("seasons/%s/segments/0/leagues/61760077",
season)
sprintf("seasons/%s/segments/0/leagues/61760077",
2020)
sprintf("seasons/%s/segments/0/leagues/%s", 2020)
sprintf("seasons/%s/segments/0/leagues/%s", 2020, 1034400)
ffespn_api
ffespn_api <- function(path, query = NULL, headers = NULL) {
# url
#baseurl <- "http://games.espn.com/"
baseurl <- "http://fantasy.espn.com/"
path <- paste0("apis/v3/games/ffl/", path)
url <- httr::modify_url(baseurl, path = path, query = query)
# get data
if (is.null(headers)) {
resp <- httr::GET(url, headers)
} else {
resp <- httr::GET(url, headers)
}
# get content
page <- httr::content(resp, "text", encoding = "utf-8")
# check errors
if (httr::http_error(resp)) {
stop(
sprintf(
"ESPN API request failed [%s]\n[%s]",
httr::status_code(resp), url
),
call. = FALSE
)
}
# check data type
if (httr::http_type(resp) != "application/json") {
stop("API did not return html", call. = FALSE)
}
# parse content
x <- jsonlite::fromJSON(page, simplifyVector = FALSE, simplifyDataFrame = FALSE, simplifyMatrix = FALSE)
# return S3 object
class(x) <- c("ffespn", class(x))
x
}
ffespn_api()
ffespn_api(sprintf("seasons/%s/segments/0/leagues/%s",
2020,
1034400), list(view = "kona_player_info"), httr::add_headers(.headers = c(`X-Fantasy-Filter` = jsonlite::toJSON(x_fantasy_filter),
`X-Fantasy-Source` = "kona", Accept = "application/json",
Referer = "http://fantasy.espn.com/football/players/projections",
DNT = "1", Connection = "keep-alive", `X-Fantasy-Platform` = "kona-PROD-669a217c5628b670cf386bd4cebe972bf88022eb")))
x_fantasy_filter <- read_json("fantasy_football/data/espn_all_players.json")
x_fantasy_filter <- jsonlite::read_json("fantasy_football/data/espn_all_players.json")
getwd()
setwd("~/Documents/dev/football")
x_fantasy_filter <- jsonlite::read_json("fantasy_football/data/espn_all_players.json")
x_fantasy_filter <- jsonlite::fromJSON(jsonlite::read_json("fantasy_football/data/espn_all_players.json"))
x_fantasy_filter <- jsonlite::fromJSON("fantasy_football/data/espn_all_players.json")
View(x_fantasy_filter)
x_fantasy_filter <- jsonlite::fromJSON("fantasy_football/data/espn_all_players.json")
Playersget = GET (
url,
config = httr::config(cookie = cookie),
content_type_json(),
user_agent(user_agent),
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
library(tidyverse)
library(httr)
library(jsonlite)
# library(sqldf)
library(gt)
detach(package:purrr)
library(purrr)
library(glue)
# ESPN Fantasy Football
cookies = c(`SWID` = swid,
`espn_s2` = espn_s2)
cookie <- paste(names(cookies), cookies, sep = "=", collapse = ";")
fantasy_key <- ff_fantasy_key %>% read_csv()
base = "http://fantasy.espn.com/apis/v3/games/ffl/seasons/"
year = Sys.Date() %>% format(format = "%Y")
mid = "/segments/0/leagues/"
leagueID <- fantasy_key$league_id[1]
tail = "?view=mDraftDetail&view=mLiveScoring&view=mMatchupScore&view=mPendingTransactions&view=mPositionalRatings&view=mSettings&view=mTeam&view=modular&view=mNav&view=mMatchupScore"
player_tail = "?view=kona_player_info"
wl_tail = "?view=proTeamSchedules_wl"
user_agent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0"
url = paste0(base,year,mid,leagueID,tail)
getwd()
ff_fantasy_key <- "fantasy_football/data/fantasy_key.csv"
swid  <-  "{2BA315B4-5941-4B1C-A315-B459416B1CC1}"
espn_s2 <- "AEBtGuDXUCKk6SpqlY71qdBDW%2BYc5KGa80m%2F0EVX9NCF%2FIFBM5b8ZMKgrMovpUeUqFTp4M%2BrPbM1I4rT1Ra2oXbM847nUp25DBY9Q%2FsAPChAykF5VNEZ05VjF6Vu3thAU0WkzQeBbjkdzNGqfbmPtMNzrBy8oV7fcAlwh4X89q4XlfPNED8ppKynNj5admyBk7WaqNzQtZJLlStpyOjz3F3d5BwUtQ8kh390OPB5HEEPfiH4%2FBftKqsLF%2BlyhTFaDiM%3D"
# league_id <- c("1034400", "62746259", "39973580")
# team_id <- c("8", "9", "10")
# league_name <- c("Colin's Minions", "Drinker's Slushy Beer", "Family League 3.0")
# team_name <- c("Rhule Tide", "Golden Rhule", "Matt Rhules")
# fantasy_key <- data.frame(league_id, league_name, team_id, team_name)
# fantasy_key %>% write_csv(ff_fantasy_key)
# ESPN Fantasy Football
cookies = c(`SWID` = swid,
`espn_s2` = espn_s2)
cookie <- paste(names(cookies), cookies, sep = "=", collapse = ";")
fantasy_key <- ff_fantasy_key %>% read_csv()
base = "http://fantasy.espn.com/apis/v3/games/ffl/seasons/"
year = Sys.Date() %>% format(format = "%Y")
mid = "/segments/0/leagues/"
leagueID <- fantasy_key$league_id[1]
tail = "?view=mDraftDetail&view=mLiveScoring&view=mMatchupScore&view=mPendingTransactions&view=mPositionalRatings&view=mSettings&view=mTeam&view=modular&view=mNav&view=mMatchupScore"
player_tail = "?view=kona_player_info"
wl_tail = "?view=proTeamSchedules_wl"
user_agent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0"
url = paste0(base,year,mid,leagueID,tail)
# Get all players
url = paste0(base, year, mid, leagueID, player_tail)
source('~/Documents/dev/football/fantasy_football/data/ff_all_players.R')
x_fantasy_filter <- jsonlite::fromJSON("fantasy_football/data/espn_all_players.json")
Playersget = GET (
url,
config = httr::config(cookie = cookie),
content_type_json(),
user_agent(user_agent),
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
View(qb)
View(x_fantasy_filter)
httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
user_agent
httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
Playersget = GET (
url,
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
)),
config = httr::config(cookie = cookie),
content_type_json(),
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
x_fantasy_filter <- jsonlite::fromJSON("fantasy_football/data/espn_all_players.json")
Playersget = GET (
url,
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
)),
config = httr::config(cookie = cookie),
content_type_json(),
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(fantasy_key)
View(ESPNPlayersFromJSON)
Playersget = GET (
url,
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
"Cookie" = cookie,
"TE" = "Trailers",
"Pragma" = "no-cache",
"Cache-Control" = "no-cache"
)),
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
Playersget = GET (
url,
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}"),
"Cookie" = cookie,
"TE" = "Trailers",
"Pragma" = "no-cache",
"Cache-Control" = "no-cache"
)),
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
cookie
cookies = c(`SWID` = swid,
`espn_s2` = espn_s2,
'kona_v3_environment_season_ffl' = kona_v3_environment,
'kona_v3_teamcontrol_ffl' = kona_v3_teamcontrol)
cookie <- paste(names(cookies), cookies, sep = "=", collapse = ";")
kona_v3_environment <- '{"leagueId":1034400,"seasonId":null}'
kona_v3_teamcontrol <- '{"leagueId":1034400,"seasonId":2020,"teamId":8}'
cookies = c(`SWID` = swid,
`espn_s2` = espn_s2,
'kona_v3_environment_season_ffl' = kona_v3_environment,
'kona_v3_teamcontrol_ffl' = kona_v3_teamcontrol)
cookie <- paste(names(cookies), cookies, sep = "=", collapse = ";")
cookie
x_fantasy_filter <- jsonlite::fromJSON("fantasy_football/data/espn_all_players.json")
Playersget = GET (
url,
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}"),
"Cookie" = cookie,
"TE" = "Trailers",
"Pragma" = "no-cache",
"Cache-Control" = "no-cache"
)),
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
Playersget = GET (
url,
config = httr::config(cookie = cookie),
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
)),
)
httr::config(cookie = cookie)
Playersget = GET (
url,
config = httr::config(cookie = cookie),
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
)),
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
Playersget = GET (
url,
config = httr::config(cookie = cookie),
header = httr::add_headers(.headers = c(
"Host" = "fantasy.espn.com",
"User-Agent" = user_agent,
"Accept" = "application/json",
"Accept-Language" = "en-US,en;q=0.5",
"Accept-Encoding" = "gzip, deflate, br",
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Connection" = "keep-alive",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
x_fantasy_filter
Playersget = GET (
url,
config = httr::config(cookie = cookie),
content_type_json(),
user_agent(user_agent),
header = httr::add_headers(.headers = c(
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
players <- data.frame(
ESPNPlayerFromJSON$players$player$id,
ESPNPlayerFromJSON$players$player$injured,
ESPNPlayerFromJSON$players$player$firstName,
ESPNPlayerFromJSON$players$player$lastName,
ESPNPlayerFromJSON$players$player$ownership$percentChange,
ESPNPlayerFromJSON$players$player$ownership$percentOwned,
ESPNPlayerFromJSON$players$player$ownership$percentStarted,
ESPNPlayerFromJSON$players$player$proTeamId,
ESPNPlayerFromJSON$players$ratings$'0'$positionalRanking,
ESPNPlayerFromJSON$players$ratings$'0'$totalRanking,
ESPNPlayerFromJSON$players$ratings$'0'$totalRating,
ESPNPlayerFromJSON$players$status
)
colnames(players) <-  c(
"id",
"injured",
"firstName",
"lastName",
"percentChange",
"percentOwned",
"percentStarted",
"proTeamId",
"positionalRanking",
"totalRanking",
"totalRating",
"status"
)
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
players <- data.frame(
ESPNPlayerFromJSON$players$player$id,
ESPNPlayerFromJSON$players$player$injured,
ESPNPlayerFromJSON$players$player$firstName,
ESPNPlayerFromJSON$players$player$lastName,
ESPNPlayerFromJSON$players$player$ownership$percentChange,
ESPNPlayerFromJSON$players$player$ownership$percentOwned,
ESPNPlayerFromJSON$players$player$ownership$percentStarted,
ESPNPlayerFromJSON$players$player$proTeamId,
ESPNPlayerFromJSON$players$ratings$'0'$positionalRanking,
ESPNPlayerFromJSON$players$ratings$'0'$totalRanking,
ESPNPlayerFromJSON$players$ratings$'0'$totalRating,
ESPNPlayerFromJSON$players$status
)
colnames(players) <-  c(
"id",
"injured",
"firstName",
"lastName",
"percentChange",
"percentOwned",
"percentStarted",
"proTeamId",
"positionalRanking",
"totalRanking",
"totalRating",
"status"
)
players <- data.frame(
ESPNPlayersFromJSON$players$player$id,
ESPNPlayersFromJSON$players$player$injured,
ESPNPlayersFromJSON$players$player$firstName,
ESPNPlayersFromJSON$players$player$lastName,
ESPNPlayersFromJSON$players$player$ownership$percentChange,
ESPNPlayersFromJSON$players$player$ownership$percentOwned,
ESPNPlayersFromJSON$players$player$ownership$percentStarted,
ESPNPlayersFromJSON$players$player$proTeamId,
ESPNPlayersFromJSON$players$ratings$'0'$positionalRanking,
ESPNPlayersFromJSON$players$ratings$'0'$totalRanking,
ESPNPlayersFromJSON$players$ratings$'0'$totalRating,
ESPNPlayersFromJSON$players$status
)
colnames(players) <-  c(
"id",
"injured",
"firstName",
"lastName",
"percentChange",
"percentOwned",
"percentStarted",
"proTeamId",
"positionalRanking",
"totalRanking",
"totalRating",
"status"
)
View(players)
jsonlite::toJSON(x_fantasy_filter)
Playersget$all_headers
url
httr::config(cookie = cookie)
user_agent
httr::add_headers(.headers = c(
"X-Fantasy-Filter" = jsonlite::toJSON(x_fantasy_filter),
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
x_fantasy_filter <- '{"players":{"filterSlotIds":{"value":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24]},"filterRanksForScoringPeriodIds":{"value":[2]},"limit":[100],"offset":[0],"sortPercOwned":{"sortAsc":[false],"sortPriority":[1]},"sortDraftRanks":{"sortPriority":[100],"sortAsc":[true],"value":["STANDARD"]},"filterRanksForRankTypes":{"value":["PPR"]},"filterRanksForSlotIds":{"value":[0,2,4,6,17,16]},"filterStatsForTopScoringPeriodIds":{"value":[2],"additionalValue":["002020","102020","002019","1120202","022020"]}}}'
x_fantasy_filter <- '{"players":{"filterStatus":{"value":["FREEAGENT","WAIVERS"]},"filterSlotIds":{"value":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24]},"filterRanksForScoringPeriodIds":{"value":[2]},"sortPercOwned":{"sortPriority":2,"sortAsc":false},"sortDraftRanks":{"sortPriority":100,"sortAsc":true,"value":"STANDARD"},"limit":100,"filterRanksForSlotIds":{"value":[0,2,4,6,17,16]},"filterStatsForTopScoringPeriodIds":{"value":2,"additionalValue":["002020","102020","002019","1120202","022020"]}}}'
x_fantasy_filter <- '{"players":{"filterStatus":{"value":["FREEAGENT","WAIVERS"]},"filterSlotIds":{"value":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24]},"filterRanksForScoringPeriodIds":{"value":[2]},"sortPercOwned":{"sortPriority":2,"sortAsc":false},"sortDraftRanks":{"sortPriority":100,"sortAsc":true,"value":"STANDARD"},"limit":100,"filterRanksForSlotIds":{"value":[0,2,4,6,17,16]},"filterStatsForTopScoringPeriodIds":{"value":2,"additionalValue":["002020","102020","002019","1120202","022020"]}}}'
Playersget = GET (
url,
config = httr::config(cookie = cookie),
content_type_json(),
user_agent(user_agent),
header = httr::add_headers(.headers = c(
"X-Fantasy-Filter" = x_fantasy_filter,
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
x_fantasy_filter <- '{"players":{"filterSlotIds":{"value":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24]},"filterRanksForScoringPeriodIds":{"value":[2]},"limit":100,"offset":0,"sortPercOwned":{"sortAsc":false,"sortPriority":1},"sortDraftRanks":{"sortPriority":100,"sortAsc":true,"value":"STANDARD"},"filterRanksForRankTypes":{"value":["PPR"]},"filterRanksForSlotIds":{"value":[0,2,4,6,17,16]},"filterStatsForTopScoringPeriodIds":{"value":2,"additionalValue":["002020","102020","002019","1120202","022020"]}}}'
Playersget = GET (
url,
config = httr::config(cookie = cookie),
content_type_json(),
user_agent(user_agent),
header = httr::add_headers(.headers = c(
"X-Fantasy-Filter" = x_fantasy_filter,
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
)
Playersget$status_code
ESPNPlayerRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayerRaw)
View(ESPNPlayersFromJSON)
ESPNPlayersRaw <- rawToChar(Playersget$content)
ESPNPlayersFromJSON <- jsonlite::fromJSON(ESPNPlayersRaw)
ESPNPlayerRaw %>% rm()
rm(ESPNPlayerRaw)
httr::add_headers(.headers = c(
"X-Fantasy-Filter" = x_fantasy_filter,
"X-Fantasy-Platform" = "kona-PROD-b3dba77950fd9b6a22ba3b8228a699d8bb974072",
"X-Fantasy-Source" = "kona",
"Referer" = glue("https://fantasy.espn.com/football/players/add?leagueId={fantasy_key$league_id[1]}")
))
