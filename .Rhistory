) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_ppr_", pbp_df$season[1], ".png"), path = "fantasy_football/plots")
c(max(avg_exp_fp_df$ppr_pts), min(avg_exp_fp_df$ppr_pts))
# Full PPR xFP table
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_PPR_pts,
ppr_pts_diff
) %>%
arrange(-exp_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_PPR_pts = 'FP',
ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, PPR_pts, exp_PPR_pts, ppr_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(PPR_pts, exp_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$PPR_pts), min(avg_exp_fp_df$PPR_pts))), # need to adjust for full PPR point scale
autocolor_text = FALSE
) %>%
data_color(
columns = vars(ppr_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$ppr_pts_diff), min(avg_exp_fp_df$ppr_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_ppr_", pbp_df$season[1], ".png"), path = "fantasy_football/plots")
# devtools::install_github("mrcaseb/nflfastR")
# devtools::install_github("dynastyprocess/ffscrapr")
proj_name <- "football"
pkgs <- c(
"devtools",
"tidyverse",
"nflfastR",
"DBI",
"odbc",
"RMariaDB",
"distill",
"httr",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"jsonlite",
"RJSONIO",
"tictoc",
"animation",
"gt",
"png",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggpmisc",
"ggbeeswarm",
"cowplot",
"gridExtra",
"grid",
"extrafont",
"shadowtext",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
# Detach all packages
# lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE)
rm(pkgs, installed_packages)
source("../initR/init.R")
fx.setdir(proj_name)
# Create standard objects -------------------------------------------------
# Connect to DB
source("../initR/con.R")
dbListTables(con)
dbDisconnect(con)
library(tidyverse)
source('https://github.com/mrcaseb/nflfastR/raw/master/R/helper_add_xyac.R')
source('https://github.com/mrcaseb/nflfastR/raw/master/R/helper_add_nflscrapr_mutations.R')
# YAC Distribution Function -----------------------------------------------
# duplicate the add_xyac() function that we sourced above
add_xyac_dist <- add_xyac
# separate each block of code in the add_xyac_dist() function into blocks
add_xyac_blocks <- body(add_xyac_dist) %>% as.list
# we want to remove lines 51 to 62 from the 5th item in the list
add_xyac_blocks[[5]] <- add_xyac_blocks[[5]] %>%
format %>%
.[-(51:62)] %>%
paste(collapse = '\n') %>%
str2lang
# replace the body of add_xyac_dist() with our new edited function
body(add_xyac_dist) <- add_xyac_blocks %>% as.call
# Data --------------------------------------------------------------------
# pbp_df <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_2019.rds'))
pbp_df <- readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_2020.rds?raw=true'))
avg_exp_fp_df <- pbp_df %>%
filter(pass_attempt==1 & season_type=='REG' & two_point_attempt==0 & !is.na(receiver_id)) %>%
add_xyac_dist %>%
select(season = season.x, game_id, play_id, posteam = posteam.x, receiver, receiver_player_id, receiver_id, yardline_100 = yardline_100.x, air_yards = air_yards.x, actual_yards_gained = yards_gained, complete_pass, cp, yac_prob = prob, gain) %>%
mutate(
gain = ifelse(yardline_100==air_yards, yardline_100, gain),
yac_prob = ifelse(yardline_100==air_yards, 1, yac_prob),
PPR_points = 1 + gain/10 + ifelse(gain == yardline_100, 6, 0),
half_PPR_points = .5 + gain/10 + ifelse(gain == yardline_100, 6, 0),
catch_run_prob = cp * yac_prob,
exp_PPR_points = PPR_points * catch_run_prob,
exp_half_PPR_points = half_PPR_points * catch_run_prob,
exp_yards = gain * catch_run_prob,
actual_outcome = ifelse(actual_yards_gained==gain & complete_pass==1, 1, 0),
actual_PPR_points = ifelse(actual_outcome==1, PPR_points, 0),
actual_half_PPR_points = ifelse(actual_outcome==1, half_PPR_points, 0),
target = 0,
game_played = 0
)  %>%
group_by(game_id, receiver) %>%
mutate(game_played = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(game_id, play_id, receiver) %>%
mutate(target = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(posteam, receiver) %>%
summarize(
games = sum(game_played, na.rm = T),
targets = sum(target, na.rm = T),
catches = sum(actual_outcome, na.rm = T),
yards = sum(ifelse(actual_outcome==1, gain, 0), na.rm = T),
td = sum(ifelse(gain==yardline_100, actual_outcome, 0), na.rm = T),
PPR_pts = sum(actual_PPR_points, na.rm = T),
half_PPR_pts = sum(actual_half_PPR_points, na.rm = T),
exp_catches = sum(ifelse(target==1, cp, NA), na.rm = T),
exp_yards = sum(exp_yards, na.rm = T),
exp_td = sum(ifelse(gain==yardline_100, catch_run_prob, 0), na.rm = T),
exp_PPR_pts = sum(exp_PPR_points, na.rm = T),
exp_half_PPR_pts = sum(exp_half_PPR_points, na.rm = T)
) %>%
mutate(
half_ppr_pts_diff = half_PPR_pts - exp_half_PPR_pts,
ppr_pts_diff = PPR_pts - exp_PPR_pts
) %>%
ungroup
View(avg_exp_fp_df)
View(avg_exp_fp_df)
View(avg_exp_fp_df)
View(cayoe)
proj_name <- "football"
pkgs <- c(
"devtools",
"tidyverse",
"nflfastR",
"DBI",
"odbc",
"RMariaDB",
"distill",
"httr",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"jsonlite",
"RJSONIO",
"tictoc",
"animation",
"gt",
"png",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggpmisc",
"ggbeeswarm",
"cowplot",
"gridExtra",
"grid",
"extrafont",
"shadowtext",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
# Detach all packages
# lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE)
rm(pkgs, installed_packages)
source("../initR/init.R")
fx.setdir(proj_name)
# Create standard objects -------------------------------------------------
# Connect to DB
source("../initR/con.R")
dbListTables(con)
dbDisconnect(con)
install.packages(c("covr", "devtools", "future", "globals", "knitr", "matrixStats", "nflfastR", "openssl", "openxlsx", "tidytext", "tinytex", "usethis", "withr"))
library(tidyverse)
source('https://github.com/mrcaseb/nflfastR/raw/master/R/helper_add_xyac.R')
source('https://github.com/mrcaseb/nflfastR/raw/master/R/helper_add_nflscrapr_mutations.R')
source('fantasy_football/xyac/add_xyac_old.R')
# YAC Distribution Function -----------------------------------------------
# duplicate the add_xyac() function that we sourced above
add_xyac_dist <- add_xyac
# add_xyac_dist_old <- add_xyac_old
#
# # separate each block of code in the add_xyac_dist() function into blocks
# add_xyac_blocks_old <- body(add_xyac_dist_old) %>% as.list
#
# # we want to remove lines 51 to 62 from the 5th item in the list
# add_xyac_blocks_old[[5]] <- add_xyac_blocks_old[[5]] %>%
#   format %>%
#   .[-(51:62)] %>%
#   paste(collapse = '\n') %>%
#   str2lang
#
# # replace the body of add_xyac_dist() with our new edited function
# body(add_xyac_dist_old) <- add_xyac_blocks %>% as.call
#
# separate each block of code in the add_xyac_dist() function into blocks
add_xyac_blocks <- body(add_xyac_dist) %>% as.list
# we want to remove lines 51 to 62 from the 5th item in the list
add_xyac_blocks[[2]][[4]][[5]] <- add_xyac_blocks[[2]][[4]][[5]] %>%
format %>%
.[-(51:62)] %>%
paste(collapse = '\n') %>%
str2lang
# replace the body of add_xyac_dist() with our new edited function
body(add_xyac_dist) <- add_xyac_blocks %>% as.call
# Data --------------------------------------------------------------------
# pbp_df <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_2019.rds'))
pbp_df <- readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_2020.rds?raw=true'))
pbp_df %>% clean_pbp()
pbp_df <- pbp_df %>%
clean_pbp()
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
pbp_df %>% nflfastR::decode_player_ids() %>%
select(desc, name, id)
# Packages & Init Setup ---------------------------------------------------
# devtools::install_github("dynastyprocess/ffscrapr")
proj_name <- "football"
pkgs <- c(
"devtools",
"tidyverse",
"nflfastR",
"DBI",
"odbc",
"RMariaDB",
"distill",
"httr",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"jsonlite",
"RJSONIO",
"tictoc",
"animation",
"gt",
"reactable",
"png",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggpmisc",
"ggbeeswarm",
"cowplot",
"gridExtra",
"grid",
"extrafont",
"shadowtext",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
# Detach all packages
# lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE)
rm(pkgs, installed_packages)
source("../initR/init.R")
fx.setdir(proj_name)
# Create standard objects -------------------------------------------------
# Connect to DB
source("../initR/con.R")
dbListTables(con)
dbDisconnect(con)
# source("fantasy_football/ff_init.R")
library(tidyverse)
source('https://github.com/mrcaseb/nflfastR/raw/master/R/helper_add_xyac.R')
source('https://github.com/mrcaseb/nflfastR/raw/master/R/helper_add_nflscrapr_mutations.R')
source('fantasy_football/xyac/add_xyac_old.R')
# YAC Distribution Function -----------------------------------------------
# duplicate the add_xyac() function that we sourced above
add_xyac_dist <- add_xyac
# separate each block of code in the add_xyac_dist() function into blocks
add_xyac_blocks <- body(add_xyac_dist) %>% as.list
# we want to remove lines 51 to 62 from the 5th item in the list
add_xyac_blocks[[2]][[4]][[5]] <- add_xyac_blocks[[2]][[4]][[5]] %>%
format %>%
.[-(51:62)] %>%
paste(collapse = '\n') %>%
str2lang
# replace the body of add_xyac_dist() with our new edited function
body(add_xyac_dist) <- add_xyac_blocks %>% as.call
# Data --------------------------------------------------------------------
# pbp_df <- readRDS(url('https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/play_by_play_2019.rds'))
pbp_df <- readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_2020.rds?raw=true'))
pbp_df <- pbp_df %>%
clean_pbp()
pbp_df %>% nflfastR::decode_player_ids() %>%
select(desc, name, id)
View(sleeper_api_players)
View(ESPNPlayersFromJSON)
View(players)
View(sleeper_api_players)
View(rosters)
ESPNPlayersFromJSON.players.player.firstName
ESPNPlayersFromJSON
View(ESPNPlayersFromJSON)
# nflfastR roster
rosters <- readRDS(url('https://github.com/mrcaseb/nflfastR-roster/blob/master/data/nflfastR-roster.rds?raw=true'))
rosters %>%
filter(pbp_id > 0)
# Sleeper API
sleeper_api_players_url <- 'https://api.sleeper.app/v1/players/nfl'
sleeper_api_players <- jsonlite::fromJSON(url('https://api.sleeper.app/v1/players/nfl'))
sleeper_api_players_df <- data.frame()
colnames(sleeper_api_players_df) %>% sleeper_api_players[[1]] %>% names()
# Create dataframe matching ESPN team IDs
team_abbr <- fantasy_roster$team.abbr %>% unique()
team_id <-
c(22, 1, 33, 2, 29, 3, 4, 5, 6, 7, 8, 9, 34, 11, 30, 12, 14, 24, 13, 15, 16, 17, 18, 19, 20, 21, 23, 26, 25, 27, 10, 28)
espn_team_ids <- data.frame(team_abbr, team_id)
join_names <- avg_exp_fp_df %>%
mutate(player_roster_join = paste0(receiver, "_", posteam)) %>%
select(player_roster_join)
fantasy_roster <- rosters %>%
filter(pbp_name != "NA",
team.season == 2020) %>%
mutate(player_roster_join = paste0(pbp_name, "_", team.abbr)) %>%
filter(player_roster_join %in% join_names$player_roster_join)
pro_team_id_to_name <- function(x) {
y <- espn_team_ids %>%
filter(team_id == x) %>%
select(team_abbr)
return(y[1])
}
pbp_id
rosters$pbp_id
espn_team_ids
View(fantasy_roster)
rosters %>%
filter(pbp_name != "NA",
team.season == 2020) %>%
mutate(player_roster_join = paste0(pbp_name, "_", team.abbr)) %>%
filter(player_roster_join %in% join_names$player_roster_join)
decode_player_ids()
decode_player_ids
decode_player_ids %>% view
decode_player_ids(fantasy_roster)
decode_player_ids(fantasy_roster) %>% view()
# Create dataframe matching ESPN team IDs
team_abbr <- rosters$team.abbr %>% unique()
team_abbr
espn_team_ids
rosters$team.abbr
team_abbr
rosters$team.abbr %>% unique() %>% order()
# Create dataframe matching ESPN team IDs
team_abbr <- rosters$team.abbr %>% unique() %>% order(decreasing = F)
rosters$team.abbr %>% unique() %>% order(decreasing = F)
# Create dataframe matching ESPN team IDs
team_abbr <- rosters$team.abbr %>% unique()
sleeper_api_players_df
colnames(sleeper_api_players_df) %>% sleeper_api_players[[1]] %>% names()
sleeper_api_players[[1]] %>% names()
sleeper_api_players
# Create dataframe matching ESPN team IDs
team_abbr <- rosters$team.abbr %>% unique()
team_abbr
espn_team_ids
?arrange
# Create dataframe matching ESPN team IDs
team_abbr <- rosters$team.abbr %>% unique() %>% arrange(asc())
rosters$team.abbr %>% unique() %>% arrange()
rosters$team.abbr %>% unique() %>% sort()
# Create dataframe matching ESPN team IDs
team_abbr <- rosters$team.abbr %>% unique() %>% sort()
team_abbr <- rosters$team.abbr %>% unique() %>% sort()
team_id <-
c(22, 1, 33, 2, 29, 3, 4, 5, 6, 7, 8, 9, 34, 11, 30, 12, 14, 24, 13, 15, 16, 17, 18, 19, 20, 21, 23, 26, 25, 27, 10, 28)
espn_team_ids <- data.frame(team_abbr, team_id)
View(espn_team_ids)
View(rosters)
pro_team_id_to_name <- function(x) {
y <- espn_team_ids %>%
filter(team_id == x) %>%
select(team_abbr)
return(y[1])
}
