qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'ID'))
roster_df <-
readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/roster-data/roster.rds?raw=true')
) %>%
decode_player_ids(fast = T) %>%
mutate(ID = ifelse(is.na(ID), teamPlayers.gsisId, ID))
all_qb_id <- pbp_df %>% pull(passer_id) %>% table %>% .[which(. >= 50)] %>% names
qb_2020_id <- pbp_df %>% filter(season==2020) %>%  pull(passer_id) %>% table %>% .[which(. >= 3)] %>% names
qb_top_bottom <- pbp_df %>%
mutate(qb_id = ifelse(is.na(passer_id), rusher_id, passer_id)) %>%
filter(qb_id %in% all_qb_id) %>%
group_by(qb_id) %>%
rename(play_cpoe = cpoe) %>%
mutate(
play_num = row_number(),
week_desc = paste0(season, ' Week ', week),
qb_epa_cap = ifelse(qb_epa <= -4.5, -4.5, qb_epa),
epa_per_play = rollapply(qb_epa_cap, 200, mean, align='right', fill=NA, na.rm = T),
cpoe = rollapply(play_cpoe, 200, mean, align='right', fill=NA, na.rm = T),
gm_list = rollapply(game_id, 200, function(x) paste(rev(unique(x)),collapse = '\n'), align='right', fill=NA),
end_game = ifelse(game_id != lead(game_id) | is.na(lead(game_id)), 1, 0),
game_num = cumsum(end_game),
last_throw = ifelse(play_num == max(play_num), 1, NA)
) %>%
ungroup %>%
mutate(dakota = mgcv::predict.gam(dakota_model, .)) %>%
group_by(qb_id) %>%
summarise(
car_plays = n(),
curr_dakota = max(last_throw * dakota, na.rm = T),
high_dakota = max(dakota, na.rm = T),
low_dakota = min(dakota, na.rm = T),
epa_per_play =  mean(epa_per_play, na.rm = T),
cpoe = mean(cpoe, na.rm = T)
) %>%
mutate(car_dakota = mgcv::predict.gam(dakota_model, .))
p <- qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'ID')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020_id) %>%
arrange(-car_dakota) %>%
mutate(rank = row_number()) %>%
ggplot(aes(x = curr_dakota, xend = high_dakota, y = rank, yend = rank)) +
geom_segment(aes(x = low_dakota), color = color_cw[5], size = 0.7) +
geom_point(aes(x = car_dakota), color = color_cw[5], shape = 8) +
geom_point(aes(fill = curr_dakota), size = 3, color = color_cw[2], shape = 21, stroke = 0.7) +
geom_shadowtext(aes(x = low_dakota - 0.005, label = teamPlayers.displayName), hjust = 1, color = color_cw[5], bg.color = color_cw[2], size = 2.2, bg.r = 0.2) +
scale_y_reverse(expand = expansion(mult = c(0.02, 0.04))) +
scale_x_continuous(limits = c(-0.15,0.4), expand = expansion(mult = 0)) +
scale_fill_viridis(option = "A") +
labs(title = 'Range of Best & Worst EPA+CPOE Composite Index' ,
subtitle = 'Rolling 200 play average | Star = Career Index, Dot = Last 200 Plays\nMin. 200 QB plays',
fill = "Index score",
x = 'EPA+CPOE Composite Index',
y = NULL) +
theme_cw +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = c(.85, .22)
)
p
readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/roster-data/roster.rds?raw=true')
) %>%
decode_player_ids(fast = T)
roster_df <-
readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/roster-data/roster.rds?raw=true')
) %>%
decode_player_ids(fast = T)
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId'))
p <- qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020_id) %>%
arrange(-car_dakota) %>%
mutate(rank = row_number()) %>%
ggplot(aes(x = curr_dakota, xend = high_dakota, y = rank, yend = rank)) +
geom_segment(aes(x = low_dakota), color = color_cw[5], size = 0.7) +
geom_point(aes(x = car_dakota), color = color_cw[5], shape = 8) +
geom_point(aes(fill = curr_dakota), size = 3, color = color_cw[2], shape = 21, stroke = 0.7) +
geom_shadowtext(aes(x = low_dakota - 0.005, label = teamPlayers.displayName), hjust = 1, color = color_cw[5], bg.color = color_cw[2], size = 2.2, bg.r = 0.2) +
scale_y_reverse(expand = expansion(mult = c(0.02, 0.04))) +
scale_x_continuous(limits = c(-0.15,0.4), expand = expansion(mult = 0)) +
scale_fill_viridis(option = "A") +
labs(title = 'Range of Best & Worst EPA+CPOE Composite Index' ,
subtitle = 'Rolling 200 play average | Star = Career Index, Dot = Last 200 Plays\nMin. 200 QB plays',
fill = "Index score",
x = 'EPA+CPOE Composite Index',
y = NULL) +
theme_cw +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = c(.85, .22)
)
all_qb_id <- pbp_df %>% pull(passer_id) %>% table %>% .[which(. >= 50)] %>% names
qb_2020_id <- pbp_df %>% filter(season==2020) %>%  pull(passer_id) %>% table %>% .[which(. >= 3)] %>% names
qb_top_bottom <- pbp_df %>%
mutate(qb_id = ifelse(is.na(passer_id), rusher_id, passer_id)) %>%
filter(qb_id %in% all_qb_id) %>%
group_by(qb_id) %>%
rename(play_cpoe = cpoe) %>%
mutate(
play_num = row_number(),
week_desc = paste0(season, ' Week ', week),
qb_epa_cap = ifelse(qb_epa <= -4.5, -4.5, qb_epa),
epa_per_play = rollapply(qb_epa_cap, 200, mean, align='right', fill=NA, na.rm = T),
cpoe = rollapply(play_cpoe, 200, mean, align='right', fill=NA, na.rm = T),
gm_list = rollapply(game_id, 200, function(x) paste(rev(unique(x)),collapse = '\n'), align='right', fill=NA),
end_game = ifelse(game_id != lead(game_id) | is.na(lead(game_id)), 1, 0),
game_num = cumsum(end_game),
last_throw = ifelse(play_num == max(play_num), 1, NA)
) %>%
ungroup %>%
mutate(dakota = mgcv::predict.gam(dakota_model, .)) %>%
group_by(qb_id) %>%
summarise(
car_plays = n(),
curr_dakota = max(last_throw * dakota, na.rm = T),
high_dakota = max(dakota, na.rm = T),
low_dakota = min(dakota, na.rm = T),
epa_per_play =  mean(epa_per_play, na.rm = T),
cpoe = mean(cpoe, na.rm = T)
) %>%
mutate(car_dakota = mgcv::predict.gam(dakota_model, .))
p <- qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020_id) %>%
arrange(-car_dakota) %>%
mutate(rank = row_number()) %>%
ggplot(aes(x = curr_dakota, xend = high_dakota, y = rank, yend = rank)) +
geom_segment(aes(x = low_dakota), color = color_cw[5], size = 0.7) +
geom_point(aes(x = car_dakota), color = color_cw[5], shape = 8) +
geom_point(aes(fill = curr_dakota), size = 3, color = color_cw[2], shape = 21, stroke = 0.7) +
geom_shadowtext(aes(x = low_dakota - 0.005, label = teamPlayers.displayName), hjust = 1, color = color_cw[5], bg.color = color_cw[2], size = 2.2, bg.r = 0.2) +
scale_y_reverse(expand = expansion(mult = c(0.02, 0.04))) +
scale_x_continuous(limits = c(-0.15,0.4), expand = expansion(mult = 0)) +
scale_fill_viridis(option = "A") +
labs(title = 'Range of Best & Worst EPA+CPOE Composite Index' ,
subtitle = 'Rolling 200 play average | Star = Career Index, Dot = Last 200 Plays\nMin. 200 QB plays',
fill = "Index score",
x = 'EPA+CPOE Composite Index',
y = NULL) +
theme_cw +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = c(.85, .22)
)
p
brand_plot(p, asp = 1, save_name = 'high low dakota.png', data_home = 'EPA+CPOE courtesy of @benbbaldwin | Data: @nflfastR', fade_borders = 'tr')
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020_id)
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2020), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020_id)
roster_df$team.season
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2020), by = c('qb_id' = 'teamPlayers.gsisId'))
qb_2020_id
pbp_df <- do.call(rbind, lapply(2006:2020, function(yr) {
readRDS(url(glue('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_{yr}.rds?raw=true')))
})) %>% decode_player_ids(fast = T)
all_qb_id <- pbp_df %>% pull(passer_id) %>% table %>% .[which(. >= 50)] %>% names
qb_2020_id <- pbp_df %>% filter(season==2020) %>%  pull(passer_id) %>% table %>% .[which(. >= 3)] %>% names
qb_top_bottom <- pbp_df %>%
mutate(qb_id = ifelse(is.na(passer_id), rusher_id, passer_id)) %>%
filter(qb_id %in% all_qb_id) %>%
group_by(qb_id) %>%
rename(play_cpoe = cpoe) %>%
mutate(
play_num = row_number(),
week_desc = paste0(season, ' Week ', week),
qb_epa_cap = ifelse(qb_epa <= -4.5, -4.5, qb_epa),
epa_per_play = rollapply(qb_epa_cap, 200, mean, align='right', fill=NA, na.rm = T),
cpoe = rollapply(play_cpoe, 200, mean, align='right', fill=NA, na.rm = T),
gm_list = rollapply(game_id, 200, function(x) paste(rev(unique(x)),collapse = '\n'), align='right', fill=NA),
end_game = ifelse(game_id != lead(game_id) | is.na(lead(game_id)), 1, 0),
game_num = cumsum(end_game),
last_throw = ifelse(play_num == max(play_num), 1, NA)
) %>%
ungroup %>%
mutate(dakota = mgcv::predict.gam(dakota_model, .)) %>%
group_by(qb_id) %>%
summarise(
car_plays = n(),
curr_dakota = max(last_throw * dakota, na.rm = T),
high_dakota = max(dakota, na.rm = T),
low_dakota = min(dakota, na.rm = T),
epa_per_play =  mean(epa_per_play, na.rm = T),
cpoe = mean(cpoe, na.rm = T)
) %>%
mutate(car_dakota = mgcv::predict.gam(dakota_model, .))
p <- qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2020), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020_id) %>%
arrange(-car_dakota) %>%
mutate(rank = row_number()) %>%
ggplot(aes(x = curr_dakota, xend = high_dakota, y = rank, yend = rank)) +
geom_segment(aes(x = low_dakota), color = color_cw[5], size = 0.7) +
geom_point(aes(x = car_dakota), color = color_cw[5], shape = 8) +
geom_point(aes(fill = curr_dakota), size = 3, color = color_cw[2], shape = 21, stroke = 0.7) +
geom_shadowtext(aes(x = low_dakota - 0.005, label = teamPlayers.displayName), hjust = 1, color = color_cw[5], bg.color = color_cw[2], size = 2.2, bg.r = 0.2) +
scale_y_reverse(expand = expansion(mult = c(0.02, 0.04))) +
scale_x_continuous(limits = c(-0.15,0.4), expand = expansion(mult = 0)) +
scale_fill_viridis(option = "A") +
labs(title = 'Range of Best & Worst EPA+CPOE Composite Index' ,
subtitle = 'Rolling 200 play average | Star = Career Index, Dot = Last 200 Plays\nMin. 200 QB plays',
fill = "Index score",
x = 'EPA+CPOE Composite Index',
y = NULL) +
theme_cw +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = c(.85, .22)
)
p
brand_plot(p, asp = 1, save_name = 'high low dakota.png', data_home = 'EPA+CPOE courtesy of @benbbaldwin | Data: @nflfastR', fade_borders = 'tr')
p <- qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020_id) %>%
arrange(-car_dakota) %>%
mutate(rank = row_number()) %>%
ggplot(aes(x = curr_dakota, xend = high_dakota, y = rank, yend = rank)) +
geom_segment(aes(x = low_dakota), color = color_cw[5], size = 0.7) +
geom_point(aes(x = car_dakota), color = color_cw[5], shape = 8) +
geom_point(aes(fill = curr_dakota), size = 3, color = color_cw[2], shape = 21, stroke = 0.7) +
geom_shadowtext(aes(x = low_dakota - 0.005, label = teamPlayers.displayName), hjust = 1, color = color_cw[5], bg.color = color_cw[2], size = 2.2, bg.r = 0.2) +
scale_y_reverse(expand = expansion(mult = c(0.02, 0.04))) +
scale_x_continuous(limits = c(-0.15,0.4), expand = expansion(mult = 0)) +
scale_fill_viridis(option = "A") +
labs(title = 'Range of Best & Worst EPA+CPOE Composite Index' ,
subtitle = 'Rolling 200 play average | Star = Career Index, Dot = Last 200 Plays\nMin. 200 QB plays',
fill = "Index score",
x = 'EPA+CPOE Composite Index',
y = NULL) +
theme_cw +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = c(.85, .22)
)
p
brand_plot(p, asp = 1, save_name = 'high low dakota.png', data_home = 'EPA+CPOE courtesy of @benbbaldwin | Data: @nflfastR', fade_borders = 'tr')
qb_2020_id
pbp_df %>%
filter(season==2020) %>%
pull(passer_name) %>%
table %>%
.[which(. >= 3)] %>%
names
pbp_df %>%
filter(season==2020) %>%
pull(passer_player_name) %>%
table %>%
.[which(. >= 3)] %>%
names
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId'))
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>% select(teamPlayers.firstName, teamPlayers.lastName)
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>% select(teamPlayers.firstName, teamPlayers.lastName) %>% filter(!is.na())
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>% select(teamPlayers.firstName, teamPlayers.lastName) %>% filter(!is.na(teamPlayers.firstName))
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season>=2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>% select(teamPlayers.firstName, teamPlayers.lastName) %>% filter(!is.na(teamPlayers.firstName))
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>% select(teamPlayers.firstName, teamPlayers.lastName) %>% filter(!is.na(teamPlayers.firstName))
qb_top_bottom
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name)
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
table %>%
.[which(. >= 3)] %>%
names
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
table
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
table %>%
.[which(. >= 3)]
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name)
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(is.na(passer_player_id))
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id))
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id))
.[which(. >= 3)] %>%
names
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id)) %>%
.[which(passer_player >= 3)] %>%
names
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id)) %>%
count(passer_player >= 3)
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id)) %>%
filter(count(passer_player) >= 3) %>%
names
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id)) %>%
names
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id))
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id)) %>%
unique()
qb_2020_id <- pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id)) %>%
unique()
View(qb_2020_id)
qb_2020 <- pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id)) %>%
unique()
rm(qb_2020_id)
qb_top_bottom <- pbp_df %>%
mutate(qb_id = ifelse(is.na(passer_id), rusher_id, passer_id)) %>%
filter(qb_id %in% all_qb_id) %>%
group_by(qb_id) %>%
rename(play_cpoe = cpoe) %>%
mutate(
play_num = row_number(),
week_desc = paste0(season, ' Week ', week),
qb_epa_cap = ifelse(qb_epa <= -4.5, -4.5, qb_epa),
epa_per_play = rollapply(qb_epa_cap, 200, mean, align='right', fill=NA, na.rm = T),
cpoe = rollapply(play_cpoe, 200, mean, align='right', fill=NA, na.rm = T),
gm_list = rollapply(game_id, 200, function(x) paste(rev(unique(x)),collapse = '\n'), align='right', fill=NA),
end_game = ifelse(game_id != lead(game_id) | is.na(lead(game_id)), 1, 0),
game_num = cumsum(end_game),
last_throw = ifelse(play_num == max(play_num), 1, NA)
) %>%
ungroup %>%
mutate(dakota = mgcv::predict.gam(dakota_model, .)) %>%
group_by(qb_id) %>%
summarise(
car_plays = n(),
curr_dakota = max(last_throw * dakota, na.rm = T),
high_dakota = max(dakota, na.rm = T),
low_dakota = min(dakota, na.rm = T),
epa_per_play =  mean(epa_per_play, na.rm = T),
cpoe = mean(cpoe, na.rm = T)
) %>%
mutate(car_dakota = mgcv::predict.gam(dakota_model, .))
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId'))
qb_2020$passer_player_id
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020$passer_player_id)
qb_top_bottom
qb_top_bottom %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020$passer_player_id)
qb_top_bottom %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id)
p <- qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id) %>%
arrange(-car_dakota) %>%
mutate(rank = row_number()) %>%
ggplot(aes(x = curr_dakota, xend = high_dakota, y = rank, yend = rank)) +
geom_segment(aes(x = low_dakota), color = color_cw[5], size = 0.7) +
geom_point(aes(x = car_dakota), color = color_cw[5], shape = 8) +
geom_point(aes(fill = curr_dakota), size = 3, color = color_cw[2], shape = 21, stroke = 0.7) +
geom_shadowtext(aes(x = low_dakota - 0.005, label = teamPlayers.displayName), hjust = 1, color = color_cw[5], bg.color = color_cw[2], size = 2.2, bg.r = 0.2) +
scale_y_reverse(expand = expansion(mult = c(0.02, 0.04))) +
scale_x_continuous(limits = c(-0.15,0.4), expand = expansion(mult = 0)) +
scale_fill_viridis(option = "A") +
labs(title = 'Range of Best & Worst EPA+CPOE Composite Index' ,
subtitle = 'Rolling 200 play average | Star = Career Index, Dot = Last 200 Plays\nMin. 200 QB plays',
fill = "Index score",
x = 'EPA+CPOE Composite Index',
y = NULL) +
theme_cw +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = c(.85, .22)
)
p
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id)
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id) %>%
left_join(qb_2020, by = c('qb_id', 'passer_player_id'))
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id)
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id) %>%
left_join(qb_2020, by = c('qb_id', 'passer_player_id'))
View(qb_2020)
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id) %>%
left_join(qb_2020, by
qb_2020$passer_player_id
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id) %>% select(passer_player_id)
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id) %>% select(qb_id)
View(qb_top_bottom)
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
left_join(qb_2020, by = c('qb_id', 'passer_player_id')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id)
qb_2020
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
left_join(qb_2020, by = c('qb_id', 'passer_player_id'))
qb_top_bottom
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
left_join(qb_2020, by = c('qb_id', 'passer_player_id'))
rlang::last_error()
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
# left_join(qb_2020, by = c('qb_id', 'passer_player_id')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id)
p <- qb_top_bottom %>%
left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
# left_join(qb_2020, by = c('qb_id', 'passer_player_id')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id) %>%
arrange(-car_dakota) %>%
mutate(rank = row_number()) %>%
ggplot(aes(x = curr_dakota, xend = high_dakota, y = rank, yend = rank)) +
geom_segment(aes(x = low_dakota), color = color_cw[5], size = 0.7) +
geom_point(aes(x = car_dakota), color = color_cw[5], shape = 8) +
geom_point(aes(fill = curr_dakota), size = 3, color = color_cw[2], shape = 21, stroke = 0.7) +
geom_shadowtext(aes(x = low_dakota - 0.005, label = passer_player_name), hjust = 1, color = color_cw[5], bg.color = color_cw[2], size = 2.2, bg.r = 0.2) +
scale_y_reverse(expand = expansion(mult = c(0.02, 0.04))) +
scale_x_continuous(limits = c(-0.15,0.4), expand = expansion(mult = 0)) +
scale_fill_viridis(option = "A") +
labs(title = 'Range of Best & Worst EPA+CPOE Composite Index' ,
subtitle = 'Rolling 200 play average | Star = Career Index, Dot = Last 200 Plays\nMin. 200 QB plays',
fill = "Index score",
x = 'EPA+CPOE Composite Index',
y = NULL) +
theme_cw +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = c(.85, .22)
)
p
qb_top_bottom %>%
left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
left_join(qb_2020, by = c('qb_id', 'passer_player_id'))
qb_2020 %>% select(passer_player_id)
qb_top_bottom %>% select(qb_id)
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
left_join(qb_2020, by = c('qb_id', 'passer_player_id'))
qb_top_bottom %>%
# left_join(roster_df %>% filter(team.season>2019), by = c('qb_id' = 'teamPlayers.gsisId')) %>%
# left_join(qb_2020, by = c('qb_id', 'passer_player_id')) %>%
filter(car_plays>=200 & qb_id %in% qb_2020$passer_player_id)
qb_2020 %>% filter(passer_player_name)
qb_2020 %>% filter(passer_player_name = "J.Herbert")
View(qb_2020)
pbp_df %>%
filter(season==2020) %>%
select(passer_player_id, passer_player_name) %>%
filter(!is.na(passer_player_id)) %>%
group_by(passer_player_id) %>%
summarise(count(passer_player_id))
