device <- "RStudio Cloud"
}
print(paste(device, "is ready for some football", sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
proj_name = readline(prompt=paste("Select directory: ", proj_names, sep = "")
)
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_name = readline(prompt=paste("Select directory ", proj_names, ":", sep = "")
)
proj_names
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_name = readline(prompt=paste("Select directory:", sep = ""))
# Packages & Init Setup ---------------------------------------------------
# devtools::install_github("mrcaseb/nflfastR")
# devtools::install_github("dynastyprocess/ffscrapr")
proj_name <- "football"
pkgs <- c(
"devtools",
"tidyverse",
"DBI",
"odbc",
"RMariaDB",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"jsonlite",
"RJSONIO",
"tictoc",
"animation",
"gt",
"png",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"cowplot",
"gridExtra",
"grid",
"extrafont",
"shadowtext",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_name = readline(prompt=paste("Select directory:", sep = ""))
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
?par
?readline
# NOT RUN {
.First <- function() if(interactive()) x11()
# }
# Packages & Init Setup ---------------------------------------------------
# devtools::install_github("mrcaseb/nflfastR")
# devtools::install_github("dynastyprocess/ffscrapr")
proj_name <- "football"
pkgs <- c(
"devtools",
"tidyverse",
"DBI",
"odbc",
"RMariaDB",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"jsonlite",
"RJSONIO",
"tictoc",
"animation",
"gt",
"png",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"cowplot",
"gridExtra",
"grid",
"extrafont",
"shadowtext",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_name = readline(prompt=paste("Select directory:", sep = ""))
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
{
.First <- function() if(interactive()) x11()
}
?interactive
interactive()
.First <- function() if(interactive()) x11()
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_name = readline(prompt=paste("Select directory:", sep = ""))
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
foo <- function(){
n1<-readline(prompt="Enter skip 1: " )
n2<-readline(prompt="Enter skip 2: " )
n1<-as.integer(n1)
n2<-as.integer(n2)
c(n1, n2)
}
foo()
# Packages & Init Setup ---------------------------------------------------
# devtools::install_github("mrcaseb/nflfastR")
# devtools::install_github("dynastyprocess/ffscrapr")
pkgs <- c(
"devtools",
"tidyverse",
"DBI",
"odbc",
"RMariaDB",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"jsonlite",
"RJSONIO",
"tictoc",
"animation",
"gt",
"png",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"cowplot",
"gridExtra",
"grid",
"extrafont",
"shadowtext",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_setup <- function(){
print(proj_names)
proj_name = readline(prompt=paste("Select directory:", sep = ""))
return(proj_name)
}
proj_setup()
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
# Packages & Init Setup ---------------------------------------------------
# devtools::install_github("mrcaseb/nflfastR")
# devtools::install_github("dynastyprocess/ffscrapr")
pkgs <- c(
"devtools",
"tidyverse",
"DBI",
"odbc",
"RMariaDB",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"jsonlite",
"RJSONIO",
"tictoc",
"animation",
"gt",
"png",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"cowplot",
"gridExtra",
"grid",
"extrafont",
"shadowtext",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_setup <- function(){
print(proj_names)
proj_name = readline(prompt=paste("Select directory:", sep = ""))
return(proj_name)
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
}
proj_setup()
proj_name
setwd("~/Documents/dev")
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_setup <- function(){
print(proj_names)
proj_name = readline(prompt=paste("Select directory:", sep = ""))
return(proj_name)
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
}
proj_setup()
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_setup <- function(){
print(proj_names)
proj_name = readline(prompt=paste("Select directory:", sep = ""))
return(proj_name)
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
}
proj_setup()
getwd()
proj_setup()
proj_setup
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_setup <- function(){
print(proj_names)
proj_name = readline(prompt=paste("Select directory:", sep = ""))
return(proj_name)
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
}
proj_setup()
getwd
getwd()
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_setup <- function(){
print(proj_names)
proj_name = readline(prompt=paste("Select directory:", sep = ""))
proj_name <<- proj_name
}
proj_setup()
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
proj_names <- c("football", "hockey", "covid-19", "spotify", "weather")
proj_setup <- function(){
print(proj_names)
proj_name = readline(prompt=paste("Select directory:", sep = ""))
proj_name <<- proj_name
}
proj_setup()
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd(paste0("~/Documents/dev/", proj_name))
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some", proj_name, sep = " "))
rm(gid)
# Create standard objects -------------------------------------------------
source("../initR/con.R") # set condition based on device to update local vs remote connections to document
length(dbListTables(con))
source("../initR/init.R")
getwd()
