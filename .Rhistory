) +
theme_cw +
theme(
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.text = element_text(size = 4),
axis.line = element_line(color = '#e0e0e0', size = 0.5),
panel.border = element_rect(color = '#16191C', size = 0.1),
axis.ticks.length = unit(0.15, 'lines'),
axis.ticks = element_line(color = '#e0e0e0', size = 0.5),
panel.grid.minor.x = element_line('#16191C', size = 0.2),
panel.spacing.x = unit(0.5, 'lines')
) +
annotation_custom(
make_gradient(deg = 270),
ymin = Inf,
ymax = -0.1,
xmin = -Inf,
xmax = Inf
) +
annotation_custom(
make_gradient(deg = 0),
ymin = -Inf,
ymax = Inf,
xmin = 48,
xmax = Inf
)
# ggplot_gtable(ggplot_build(p))
brand_plot(p, asp = 16/9, save_name = 'xfp_half_PPR_box_2020_test.png', fade_borders = '', data_home = 'Data: @nflfastR', tm_wordmarks = T)
# Completed Air Yards Over Expected
cayoe_xyac <- pbp_df %>%
filter(pass_attempt == 1 &
season_type == 'REG' &
two_point_attempt == 0 & !is.na(receiver_id) &
# wp > .2 &
# wp < .8 &
air_yards > 0) %>%
add_xyac_dist
cayoe <- cayoe_xyac %>%
select(
season = season.x,
game_id,
play_id,
posteam = posteam.x,
passer,
passer_player_id,
passer_id,
receiver,
receiver_player_id,
receiver_id,
yardline_100 = yardline_100.x,
air_yards = air_yards.x,
actual_yards_gained = yards_gained,
complete_pass,
cp,
cpoe,
yac_prob = prob,
gain,
pass_attempt
) %>%
mutate(
gain = ifelse(yardline_100 == air_yards, yardline_100, gain),
yac_prob = ifelse(yardline_100 == air_yards, 1, yac_prob),
# PPR_points = 1 + gain / 10 + ifelse(gain == yardline_100, 6, 0),
# half_PPR_points = .5 + gain / 10 + ifelse(gain == yardline_100, 6, 0),
catch_run_prob = cp * yac_prob,
# exp_PPR_points = PPR_points * catch_run_prob,
# exp_half_PPR_points = half_PPR_points * catch_run_prob,
exp_yards = gain * catch_run_prob,
actual_outcome = ifelse(actual_yards_gained == gain &
complete_pass == 1, 1, 0),
# actual_PPR_points = ifelse(actual_outcome == 1, PPR_points, 0),
# actual_half_PPR_points = ifelse(actual_outcome == 1, half_PPR_points, 0),
# completion = 0,
attempt = 0,
game_played = 0,
cayoe = cpoe * air_yards,
sum_cayoe = 0
) %>%
group_by(game_id, passer_player_id) %>%
mutate(game_played = ifelse(row_number() == 1, 1, 0)) %>%
ungroup %>%
# group_by(game_id, play_id, passer) %>%
# mutate(completion = ifelse(row_number() == 1, 1, 0)) %>%
# ungroup %>%
group_by(game_id, play_id, receiver) %>%
mutate(attempt = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(posteam, passer) %>%
# filter()
summarize(
season = unique(season),
games = sum(game_played, na.rm = T),
pass_attempts = sum(attempt, na.rm = T),
completions = sum(actual_outcome, na.rm = T),
yards = sum(ifelse(actual_outcome == 1, gain, 0), na.rm = T),
td = sum(ifelse(gain == yardline_100, actual_outcome, 0), na.rm = T),
# PPR_pts = sum(actual_PPR_points, na.rm = T),
# half_PPR_pts = sum(actual_half_PPR_points, na.rm = T),
exp_completions = sum(ifelse(attempt == 1, cp, NA), na.rm = T),
exp_yards = sum(exp_yards, na.rm = T),
exp_td = sum(ifelse(gain == yardline_100, catch_run_prob, 0), na.rm = T),
# exp_PPR_pts = sum(exp_PPR_points, na.rm = T),
# exp_half_PPR_pts = sum(exp_half_PPR_points, na.rm = T),
sum_cayoe = sum(yards-exp_yards, na.rm = T),
) %>%
mutate(
# half_ppr_pts_diff = half_PPR_pts - exp_half_PPR_pts,
# ppr_pts_diff = PPR_pts - exp_PPR_pts,
cayoe_a = sum_cayoe / pass_attempts
) %>%
ungroup
# filter(pass_attempts > mean(cayoe$pass_attempts)-(mean(cayoe$pass_attempts)*.6))
summary(cayoe$pass_attempts)
cayoe_filtered <- cayoe %>%
filter(pass_attempts > (summary(pass_attempts)[4]))
# xFP QB table
cayoe_filtered %>%
select(
games,
passer,
posteam,
pass_attempts,
completions,
yards,
td,
# PPR_pts,
exp_completions,
exp_yards,
exp_td,
# exp_PPR_pts,
# ppr_pts_diff,
sum_cayoe,
cayoe_a
) %>%
arrange(-cayoe_a) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = paste('Completed Air Yards Over Expected (CAYOE),', cayoe$season[1]),
subtitle = paste('Through week', my_week, 'MNF', '|', 'Min.', round(summary(cayoe$pass_attempts)[4]),'pass attempts and > 0 air yards')) %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
passer = '',
posteam = '',
pass_attempts = 'Pass Attempts',
completions = 'Comp.',
yards = 'Yds',
td = 'TD',
# PPR_pts = 'FP',
exp_completions = 'xComp.',
exp_yards = 'xYds',
exp_td = 'xTD',
# exp_PPR_pts = 'xFP',
# ppr_pts_diff = "Pts Diff.",
sum_cayoe = "Total CAYOE",
cayoe_a = "Avg CAYOE"
) %>%
fmt_number(columns = vars(sum_cayoe, cayoe_a), decimals = 2) %>%
fmt_number(columns = vars(exp_td), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_completions), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large', weight = 'bold'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(passer))) %>%
tab_style(
style = cell_borders(
sides = "left",
color = color_cw[5],
weight = px(3)
),
locations = list(
cells_body(
columns = c(4,8,11,12)
)
)
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_body(
columns = vars(Rank, passer)
)
) %>%
tab_spanner(label = 'Actual', columns = vars(completions, yards, td)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_completions, exp_yards, exp_td)) %>%
tab_source_note(source_note = 'Data: @nflfastR') %>%
data_color(
columns = vars(sum_cayoe),
colors = scales::col_numeric(palette = c(color_cw[2], color_cw[6]), domain = c(max(cayoe$sum_cayoe), min(cayoe$sum_cayoe))),
autocolor_text = FALSE
) %>%
data_color(
columns = vars(cayoe_a),
colors = scales::col_numeric(palette = c(color_cw[2], color_cw[6]), domain = c(max(cayoe$cayoe_a), min(cayoe$cayoe_a))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = color_cw[5],
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = color_cw[5],
column_labels.border.bottom.width = 1.4,
column_labels.font.weight = "bold",
table_body.border.top.color = color_cw[5],
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = color_cw[5],
table.border.top.color = 'transparent',
table.background.color = color_cw[1],
table.border.bottom.color = 'transparent',
row.striping.background_color = color_cw[2],
row.striping.include_table_body = TRUE
) %>%
opt_table_font(
font = list(
google_font("Chivo"),
default_fonts()
)
) %>%
gtsave(filename = paste0("xFP_QB_", cayoe$season[1], ".png"), path = "fantasy_football/plots")
# Average Expected Fantasy Points - Receivers
avg_exp_fp_df <- pbp_df %>%
filter(pass_attempt==1 & season_type=='REG' & two_point_attempt==0 & !is.na(receiver_id)) %>%
add_xyac_dist %>%
select(season = season.x, game_id, play_id, posteam = posteam.x, receiver, receiver_player_id, receiver_id, yardline_100 = yardline_100.x, air_yards = air_yards.x, actual_yards_gained = yards_gained, complete_pass, cp, yac_prob = prob, gain) %>%
mutate(
gain = ifelse(yardline_100==air_yards, yardline_100, gain),
yac_prob = ifelse(yardline_100==air_yards, 1, yac_prob),
PPR_points = 1 + gain/10 + ifelse(gain == yardline_100, 6, 0),
half_PPR_points = .5 + gain/10 + ifelse(gain == yardline_100, 6, 0),
catch_run_prob = cp * yac_prob,
exp_PPR_points = PPR_points * catch_run_prob,
exp_half_PPR_points = half_PPR_points * catch_run_prob,
exp_yards = gain * catch_run_prob,
actual_outcome = ifelse(actual_yards_gained==gain & complete_pass==1, 1, 0),
actual_PPR_points = ifelse(actual_outcome==1, PPR_points, 0),
actual_half_PPR_points = ifelse(actual_outcome==1, half_PPR_points, 0),
target = 0,
game_played = 0
)  %>%
group_by(game_id, receiver) %>%
mutate(game_played = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(game_id, play_id, receiver) %>%
mutate(target = ifelse(row_number()==1,1,0)) %>%
ungroup %>%
group_by(posteam, receiver) %>%
summarize(
games = sum(game_played, na.rm = T),
targets = sum(target, na.rm = T),
catches = sum(actual_outcome, na.rm = T),
yards = sum(ifelse(actual_outcome==1, gain, 0), na.rm = T),
td = sum(ifelse(gain==yardline_100, actual_outcome, 0), na.rm = T),
PPR_pts = sum(actual_PPR_points, na.rm = T),
half_PPR_pts = sum(actual_half_PPR_points, na.rm = T),
exp_catches = sum(ifelse(target==1, cp, NA), na.rm = T),
exp_yards = sum(exp_yards, na.rm = T),
exp_td = sum(ifelse(gain==yardline_100, catch_run_prob, 0), na.rm = T),
exp_PPR_pts = sum(exp_PPR_points, na.rm = T),
exp_half_PPR_pts = sum(exp_half_PPR_points, na.rm = T)
) %>%
mutate(
half_ppr_pts_diff = half_PPR_pts - exp_half_PPR_pts,
ppr_pts_diff = PPR_pts - exp_PPR_pts
) %>%
ungroup
library(gt)
# make the table
# 1/2 PPR xFP table
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
half_PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_half_PPR_pts,
half_ppr_pts_diff
) %>%
arrange(-exp_half_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving 1/2 PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
half_PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_half_PPR_pts = 'FP',
half_ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, half_PPR_pts, exp_half_PPR_pts, half_ppr_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, half_PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_half_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(half_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$half_PPR_pts), min(avg_exp_fp_df$half_PPR_pts))), # anyway to automate?
autocolor_text = FALSE
) %>%
data_color(
columns = vars(exp_half_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$exp_half_PPR_pts), min(avg_exp_fp_df$exp_half_PPR_pts))), # need to adjust for full PPR point scale
autocolor_text = FALSE
) %>%
data_color(
columns = vars(half_ppr_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$half_ppr_pts_diff), min(avg_exp_fp_df$half_ppr_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_half_ppr_", pbp_df$season[1], ".png"), path = "fantasy_football/plots")
# Full PPR xFP table
avg_exp_fp_df %>%
select(
games,
receiver,
posteam,
targets,
catches,
yards,
td,
PPR_pts,
exp_catches,
exp_yards,
exp_td,
exp_PPR_pts,
ppr_pts_diff
) %>%
arrange(-exp_PPR_pts) %>%
dplyr::slice(1:50) %>%
mutate(Rank = paste0('#',row_number())) %>%
gt() %>%
tab_header(title = 'Expected Receiving PPR Fantasy Points, 2019') %>%
cols_move_to_start(columns = vars(Rank)) %>%
cols_label(
games = 'GP',
receiver = '',
posteam = '',
targets = 'Targ',
catches = 'Rec',
yards = 'Yds',
td = 'TD',
PPR_pts = 'FP',
exp_catches = 'Rec',
exp_yards = 'Yds',
exp_td = 'TD',
exp_PPR_pts = 'FP',
ppr_pts_diff = "Pts Diff."
) %>%
fmt_number(columns = vars(exp_td, PPR_pts, exp_PPR_pts, ppr_pts_diff), decimals = 1) %>%
fmt_number(columns = vars(yards, exp_yards, exp_catches), decimals = 0, sep_mark = ',') %>%
tab_style(style = cell_text(size = 'x-large'), locations = cells_title(groups = 'title')) %>%
tab_style(style = cell_text(align = 'center', size = 'medium'), locations = cells_body()) %>%
tab_style(style = cell_text(align = 'left'), locations = cells_body(vars(receiver))) %>%
tab_spanner(label = 'Actual', columns = vars(catches, yards, td, PPR_pts)) %>%
tab_spanner(label = 'Expected', columns = vars(exp_catches, exp_yards, exp_td, exp_PPR_pts)) %>%
tab_source_note(source_note = '') %>%
data_color(
columns = vars(PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$PPR_pts), min(avg_exp_fp_df$PPR_pts))), # need to adjust for full PPR point scale
autocolor_text = FALSE
) %>%
data_color(
columns = vars(exp_PPR_pts),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$exp_PPR_pts), min(avg_exp_fp_df$exp_PPR_pts))), # need to adjust for full PPR point scale
autocolor_text = FALSE
) %>%
data_color(
columns = vars(ppr_pts_diff),
colors = scales::col_numeric(palette = c('grey97', 'darkorange1'), domain = c(max(avg_exp_fp_df$ppr_pts_diff), min(avg_exp_fp_df$ppr_pts_diff))),
autocolor_text = FALSE
) %>%
text_transform(
locations = cells_body(vars(posteam)),
fn = function(x) web_image(url = paste0('https://a.espncdn.com/i/teamlogos/nfl/500/',x,'.png'))
) %>%
cols_width(vars(posteam) ~ px(45)) %>%
tab_options(
table.font.color = 'darkblue',
data_row.padding = '2px',
row_group.padding = '3px',
column_labels.border.bottom.color = 'darkblue',
column_labels.border.bottom.width = 1.4,
table_body.border.top.color = 'darkblue',
row_group.border.top.width = 1.5,
row_group.border.top.color = '#999999',
table_body.border.bottom.width = 0.7,
table_body.border.bottom.color = '#999999',
row_group.border.bottom.width = 1,
row_group.border.bottom.color = 'darkblue',
table.border.top.color = 'transparent',
table.background.color = '#F2F2F2',
table.border.bottom.color = 'transparent',
row.striping.background_color = '#FFFFFF',
row.striping.include_table_body = TRUE
) %>%
gtsave(filename = paste0("xFP_share_ppr_", pbp_df$season[1], ".png"), path = "fantasy_football/plots")
library(zoo)
source('plots/assets/plot_theme.R')
load(url('https://github.com/guga31bb/metrics/blob/master/dakota_model.rda?raw=true'))
roster_df <- readRDS(url('https://github.com/guga31bb/nflfastR-data/blob/master/roster-data/roster.rds?raw=true')) %>%
left_join(readRDS(url('https://github.com/ajreinhard/NFL/blob/master/nflfastR%20ID%20mapping/gsis_map.rds?raw=true')), by = c('teamPlayers.gsisId' = 'gsis')) %>%
mutate(ID = ifelse(is.na(ID), teamPlayers.gsisId, ID))
pbp_df <- do.call(rbind, lapply(2006:2020, function(yr) {
readRDS(url(paste0('https://github.com/guga31bb/nflfastR-data/blob/master/data/play_by_play_',yr,'.rds?raw=true')))
}))
all_qb_id <- pbp_df %>% pull(passer_id) %>% table %>% .[which(. >= 50)] %>% names
qb_2020_id <- pbp_df %>% filter(season==2020) %>%  pull(passer_id) %>% table %>% .[which(. >= 3)] %>% names
qb_top_bottom <- pbp_df %>%
mutate(qb_id = ifelse(is.na(passer_id), rusher_id, passer_id)) %>%
filter(qb_id %in% all_qb_id) %>%
group_by(qb_id) %>%
rename(play_cpoe = cpoe) %>%
mutate(
play_num = row_number(),
week_desc = paste0(season, ' Week ', week),
qb_epa_cap = ifelse(qb_epa <= -4.5, -4.5, qb_epa),
epa_per_play = rollapply(qb_epa_cap, 200, mean, align='right', fill=NA, na.rm = T),
cpoe = rollapply(play_cpoe, 200, mean, align='right', fill=NA, na.rm = T),
gm_list = rollapply(game_id, 200, function(x) paste(rev(unique(x)),collapse = '\n'), align='right', fill=NA),
end_game = ifelse(game_id != lead(game_id) | is.na(lead(game_id)), 1, 0),
game_num = cumsum(end_game),
last_throw = ifelse(play_num == max(play_num), 1, NA)
) %>%
ungroup %>%
mutate(dakota = mgcv::predict.gam(dakota_model, .)) %>%
group_by(qb_id) %>%
summarise(
car_plays = n(),
curr_dakota = max(last_throw * dakota, na.rm = T),
high_dakota = max(dakota, na.rm = T),
low_dakota = min(dakota, na.rm = T),
epa_per_play =  mean(epa_per_play, na.rm = T),
cpoe = mean(cpoe, na.rm = T)
) %>%
mutate(car_dakota = mgcv::predict.gam(dakota_model, .))
p <- qb_top_bottom %>%
left_join(roster_df %>% filter(team.season==2019), by = c('qb_id' = 'ID')) %>%
filter(!is.na(team.season) & car_plays>=200 & qb_id %in% qb_2020_id) %>%
arrange(-car_dakota) %>%
mutate(rank = row_number()) %>%
ggplot(aes(x = curr_dakota, xend = high_dakota, y = rank, yend = rank)) +
geom_segment(aes(x = low_dakota), color = color_cw[5], size = 0.7) +
geom_point(aes(x = car_dakota), color = color_cw[5], shape = 8) +
geom_point(fill = color_cw[6], size = 3, color = color_cw[2], shape = 21, stroke = 0.7) +
geom_shadowtext(aes(x = low_dakota - 0.005, label = teamPlayers.displayName), hjust = 1, color = color_cw[5], bg.color = color_cw[2], size = 2.2, bg.r = 0.2) +
scale_y_reverse(expand = expansion(mult = c(0.02, 0.04))) +
scale_x_continuous(limits = c(-0.15,0.4), expand = expansion(mult = 0)) +
labs(title = 'Range of Best & Worst EPA+CPOE Composite Index' ,
subtitle = 'Rolling 200 play average  |  Star = Career Index, Green Dot = Last 200 Plays  |  min. 800 QB plays',
x = 'EPA+CPOE Composite Index',
y = NULL) +
theme_cw +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank()
)
brand_plot(p, asp = 1, save_name = 'high low dakota.png', data_home = 'Data: @nflfastR', fade_borders = 'tlr')
