"ggrepel",
"ggbeeswarm",
"extrafont",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd("~/Documents/dev/football")
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd("~/Documents/dev/football")
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some football", sep = " "))
rm(gid, device)
?askForPassword
db_user <- "publiccolin"
con <- dbConnect(RMariaDB::MariaDB(),
host = "72.78.233.235",
port = "3306",
user = db_user,
password = askForPassword(paste0("Enter MariaDB password for user:", db_user)),
dbname = "football",
# database = "football",
# Server = "localhost\\SQLEXPRESS",
# Database = "datawarehouse",
Trusted_Connection = "True")
con <- dbConnect(RMariaDB::MariaDB(),
host = "72.78.233.235",
port = "3306",
user = db_user,
password = rstudioapi::askForPassword(paste0("Enter MariaDB password for user:", db_user)),
dbname = "football",
# database = "football",
# Server = "localhost\\SQLEXPRESS",
# Database = "datawarehouse",
Trusted_Connection = "True")
db_user <- "publiccolin"
con <- dbConnect(RMariaDB::MariaDB(),
host = "72.78.233.235",
port = "3306",
user = db_user,
password = rstudioapi::askForPassword(paste0("Enter MariaDB password for user:", db_user)),
dbname = "football",
# database = "football",
# Server = "localhost\\SQLEXPRESS",
# Database = "datawarehouse",
Trusted_Connection = "True")
db_user <- "publiccolin"
con <- dbConnect(RMariaDB::MariaDB(),
host = "72.78.233.235",
port = "3306",
user = db_user,
password = rstudioapi::askForPassword(paste("Enter MariaDB password for user:", db_user, sep="")),
dbname = "football",
# database = "football",
# Server = "localhost\\SQLEXPRESS",
# Database = "datawarehouse",
Trusted_Connection = "True")
db_user <- "publiccolin"
con <- dbConnect(RMariaDB::MariaDB(),
host = "72.78.233.235",
port = "3306",
user = db_user,
password = rstudioapi::askForPassword(paste("Enter MariaDB password for user:", db_user, sep=" ")),
dbname = "football",
# database = "football",
# Server = "localhost\\SQLEXPRESS",
# Database = "datawarehouse",
Trusted_Connection = "True")
dbWriteTable(con, "pbp", readRDS(f.pbp_db_rds))
?dbWriteTable
# write table
RMariaDB::dbWriteTable(con, "pbp", readRDS(f.pbp_db_rds), overwrite = TRUE)
nrow(readRDS(f.pbp_db_rds))
RMariaDB::dbWriteTable(con, "schedule", fast_scraper_schedules(years, pp = TRUE))
source(con.R)
source("con.R")
source("con.R")
dbListConnections()
dbListTables(con)
dbListConnections(con)
dbListObjects(con)
db_list_tables(con)
dbListFields(con)
?dbListFields
dbListFields(con, "pbp")
dbListFields(con, "schedule")
dbListObjects(con)
?dbListObjects
getwd()
rstudioapi::askForSecret()
?rstudioapi::askForSecret
rstudioapi::askForSecret(host_api,
paste("Enter host IP:", name, sep = " ")
title = paste(host_api, "Secret"))
rstudioapi::askForSecret(host_api,
paste("Enter host IP:", host_api, sep = " ")
title = paste(host_api, "Secret"))
rstudioapi::askForSecret(host_api,
paste("Enter host IP:", host_api, sep = " "),
title = paste(host_api, "Secret"))
rstudioapi::askForSecret(name,
paste("Enter host IP:", name, sep = " "),
title = paste(name, "Secret"))
name <- "72.78.233.235"
rstudioapi::askForSecret(name,
paste("Enter host IP:", name, sep = " "),
title = paste(name, "Secret"))
rstudioapi::askForSecret(name,
"Enter host IP:",
title = paste(name, "Secret"))
rstudioapi::askForSecret("Enter host IP:",
title = paste(name, "Secret"))
rstudioapi::askForSecret("Enter host IP",
title = paste("Secret"))
rstudioapi::askForSecret("Enter host IP",
title = paste("Iceman IP address"))
?rstudioapi::askForPassword
rstudioapi::askForSecret("Enter Iceman IP address",
title = paste("Iceman IP address"))
rstudioapi::askForSecret("Enter MariaDB password",
title = paste("Iceman password"))
rstudioapi::askForSecret("Enter Iceman IP address",
title = paste("Iceman IP Address"))
rstudioapi::askForSecret("Enter MariaDB password",
title = paste("Iceman password"))
rstudioapi::askForSecret("Enter MariaDB password",
title = paste("Iceman Password"))
con <- dbConnect(RMariaDB::MariaDB(),
host = rstudioapi::askForSecret("Enter Iceman IP address",
title = paste("Iceman IP Address")), # appears above the prompt
port = "3306",
user = db_user,
host = rstudioapi::askForSecret("Enter MariaDB password",
title = paste("Iceman Password")), # appears above the prompt
# password = rstudioapi::askForPassword(paste("Enter MariaDB password for user:", db_user, sep=" ")),
dbname = proj_name,
Trusted_Connection = "True")
proj_name <- "football"
pkgs <- c(
"devtools",
"tidyverse",
"DBI",
"odbc",
"RMariaDB",
"readr",
"pander",
"furrr",
"na.tools",
"ggimage",
"teamcolors",
"glue",
"dplyr",
"tictoc",
"animation",
"gt",
"DT",
"ggthemes",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"extrafont",
"tidytext",
"RCurl"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
lapply(pkgs, library, character.only = TRUE)
# library("nflscrapR") # doesn't work anymore
library("nflfastR")
# library("ffscrapr")
##reset
setwd("~/")
gid <- paste(getwd())
gid
device <- ""
if (gid == "/Volumes/HDD/Users/colinwelsh") {
## Maverick - MBP
setwd("~/Documents/dev/football")
device <- "Maverick (MBP)"
} else if (gid == "/Users/ColinWelsh") {
## Goose - iMac
setwd("~/Documents/dev/football")
device <- "Goose (iMac)"
} else if (gid == "/home/rstudio-user") {
## RStudio Cloud
setwd("/cloud/project")
device <- "RStudio Cloud"
}
print(paste(device, "is ready for some football", sep = " "))
rm(gid, device)
# Create standard objects -------------------------------------------------
source("../con.R")
dbListTables(con)
dbListObjects(con)
dbListFields(con, "pbp")
dbListFields(con, "schedule")
source("../con.R")
View(con)
source("con.R")
source("con.R")
source("con.R")
source("con.R")
source("con.R")
View(con)
dbListTables(con)
dbListObjects(con)
dbListFields(con, "pbp")
dbListFields(con, "schedule")
source("../con.R")
dbListFields(con, "schedule")
?if
}
count(c(
"Cricket",
"Cycling",
"F1",
"Formula E",
"Global Ice Hockey",
"Golf",
"IndyCar",
"MLB",
"NASCAR",
"NBA",
"NCAA Football",
"NCAAMB",
"NCAAMH",
"NCAAWB",
"NFL Official",
"NHL Official",
"Soccer Americas",
"Soccer Europe",
"Soccer International",
"Tennis",
))
count(c(
"Cricket",
"Cycling",
"F1",
"Formula E",
"Global Ice Hockey",
"Golf",
"IndyCar",
"MLB",
"NASCAR",
"NBA",
"NCAA Football",
"NCAAMB",
"NCAAMH",
"NCAAWB",
"NFL Official",
"NHL Official",
"Soccer Americas",
"Soccer Europe",
"Soccer International",
"Tennis"
))
length(c(
"Cricket",
"Cycling",
"F1",
"Formula E",
"Global Ice Hockey",
"Golf",
"IndyCar",
"MLB",
"NASCAR",
"NBA",
"NCAA Football",
"NCAAMB",
"NCAAMH",
"NCAAWB",
"NFL Official",
"NHL Official",
"Soccer Americas",
"Soccer Europe",
"Soccer International",
"Tennis"
))
length(c(
NA,
"wc5e7z38ncfyjehpyy2kg9ug",
"8nkt9raeetpfr46k3bfdwq3j",
"a5ux57r4y67jnhrr6myp3y5z",
"f796s3fd3ejj4fezm3ujnk46",
"vhcp84c3uunm7ub2cr3777dg",
"49qmegdbjjsa6sasnxz763be",
"ecr62bqd76vzftmbmerzw5nm",
NA,
"8yxcujp9cjmv5nr4kx3nj3ww",
"wtwzs9faya4nsqj8e3f8whyj",
"vx96fywt45m5xpd5mwzjxuda",
"nws2vguejfj4nc4ecd574pm6",
NA,
"qeku77txdetdmy86ncn4cfer",
"3g6tq73cjqe3dpn6g8amvn5m",
"dsgmfyc8ebfb973xvvj39rdv",
"uxxkvfq4t33bws8cstjf5zpa",
"d7f87fcrr7n8sf6jh8nfnh9c",
"nrbeyqma2fq25we7uxwjarrr"
))
length(c(
NA,
NA,
NA,
NA,
NA,
"golf",
NA,
"baseball",
NA,
"basketball",
"ncaa_football",
"ncaa_basketball",
"ncaa_hockey",
NA,
"football",
"hockey",
NA,
NA,
NA,
NA
))
length(c(
NA, # cricket
1000, # cycling
1000, # f1
1000, # formula e
1000, # global ice hockey
200, # golf
1000, # indycar
1000, # mlb
NA, # nascar
1000, # nba
1000, # ncaa football
1000, # ncaa basketball
1000, # ncaa hockey
NA, # ncaa womens basketball
1000, #nfl
1000, # nhl
1000, # soccer americas
1000, # soccer europe
1000, # soccer internationla
200 # tennis
))
source("../init/con.R")
source("../init/con.R")
sportradar_sports <-
c(
"Cricket",
"Cycling",
"F1",
"Formula E",
"Global Ice Hockey",
"Golf",
"IndyCar",
"MLB",
"NASCAR",
"NBA",
"NCAA Football",
"NCAAMB",
"NCAAMH",
"NCAAWB",
"NFL Official",
"NHL Official",
"Soccer Americas",
"Soccer Europe",
"Soccer International",
"Tennis"
)
sportradar_keys <-
c(
NA,
"wc5e7z38ncfyjehpyy2kg9ug",
"8nkt9raeetpfr46k3bfdwq3j",
"a5ux57r4y67jnhrr6myp3y5z",
"f796s3fd3ejj4fezm3ujnk46",
"vhcp84c3uunm7ub2cr3777dg",
"49qmegdbjjsa6sasnxz763be",
"ecr62bqd76vzftmbmerzw5nm",
NA,
"8yxcujp9cjmv5nr4kx3nj3ww",
"wtwzs9faya4nsqj8e3f8whyj",
"vx96fywt45m5xpd5mwzjxuda",
"nws2vguejfj4nc4ecd574pm6",
NA,
"qeku77txdetdmy86ncn4cfer",
"3g6tq73cjqe3dpn6g8amvn5m",
"dsgmfyc8ebfb973xvvj39rdv",
"uxxkvfq4t33bws8cstjf5zpa",
"d7f87fcrr7n8sf6jh8nfnh9c",
"nrbeyqma2fq25we7uxwjarrr"
)
sportradar_db_match <-
c(
NA,
NA,
NA,
NA,
NA,
"golf",
NA,
"baseball",
NA,
"basketball",
"ncaa_football",
"ncaa_basketball",
"ncaa_hockey",
NA,
"football",
"hockey",
NA,
NA,
NA,
NA
)
sportradar_rate_limit <-
c(
NA, # cricket
1000, # cycling
1000, # f1
1000, # formula e
1000, # global ice hockey
200, # golf
1000, # indycar
1000, # mlb
NA, # nascar
1000, # nba
1000, # ncaa football
1000, # ncaa basketball
1000, # ncaa hockey
NA, # ncaa womens basketball
1000, #nfl
1000, # nhl
1000, # soccer americas
1000, # soccer europe
1000, # soccer internationla
200 # tennis
)
sportradar_con <-
data.frame(
sportradar_sports,
sportradar_keys,
sportradar_db_match,
sportradar_rate_limit
)
f.sportradar <- paste0("sportradar_con.rds")
saveRDS(f.sportradar)
paste0("sportradar_con.rds")
saveRDS(f.sportradar)
f.sportradar <- paste0("sportradar_con.rds")
f.sportradar
f.sportradar
saveRDS(file = f.sportradar)
saveRDS(sportradar_con, f.sportradar)
getwd()
f.sportradar <- paste0("../init/sportradar_con.rds")
saveRDS(sportradar_con, f.sportradar)
View(sportradar_con)
library(jsonlite)
data1 <- fromJSON("https://api.github.com/users/hadley/repos")
View(data1)
rm(data1)
roster_legacy_map <- paste0("https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/data/legacy_id_map.rds") %>%
url() %>%
readRDS()
roster <- paste0("https://github.com/guga31bb/nflfastR-data/blob/master/roster-data/roster.rds") %>%
url() %>%
readRDS()
roster_legacy_map <- paste0("https://raw.githubusercontent.com/guga31bb/nflfastR-data/blob/master/roster-data/legacy_id_map.rds") %>%
url() %>%
readRDS()
roster_legacy_map <- paste0("https://raw.githubusercontent.com/guga31bb/nflfastR-data/master/roster-data/legacy_id_map.rds") %>%
url() %>%
readRDS()
roster <- paste0("https://raw.github.com/guga31bb/nflfastR-data/master/roster-data/roster.rds") %>%
url() %>%
readRDS()
View(roster_legacy_map)
View(roster)
f.roster_legacy_map <- paste0("data/roster_legacy_map.rds")
saveRDS(roster_legacy_map, f.roster_legacy_map)
RMariaDB::dbWriteTable(con, "roster_legacy_data", readRDS(f.roster_legacy_map))
f.roster <- paste0("data/roster.rds")
saveRDS(roster, f.roster)
RMariaDB::dbWriteTable(con, "roster", readRDS(f.roster))
rm(roster_legacy_map, roster)
